<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FEDT</title>
  <subtitle>Front End Developer A-Ten&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pages.fedt.xin/"/>
  <updated>2016-12-02T15:17:43.569Z</updated>
  <id>http://pages.fedt.xin/</id>
  
  <author>
    <name>A-Ten</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git工具学习笔记</title>
    <link href="http://pages.fedt.xin/2016/12/02/LearnGitTool/"/>
    <id>http://pages.fedt.xin/2016/12/02/LearnGitTool/</id>
    <published>2016-12-01T16:00:00.000Z</published>
    <updated>2016-12-02T15:17:43.569Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Note-for-learn-git-tool&quot;&gt;&lt;a href=&quot;#Note-for-learn-git-tool&quot; class=&quot;headerlink&quot; title=&quot;Note for learn git tool&quot;&gt;&lt;/a&gt;Note for learn git tool&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;2016/12/2&lt;br&gt;Chuck&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;远程仓库&quot;&gt;&lt;a href=&quot;#远程仓库&quot; class=&quot;headerlink&quot; title=&quot;远程仓库&quot;&gt;&lt;/a&gt;远程仓库&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建SSH key &lt;code&gt;$ ssh-keygen -t rsa -C &amp;quot;youremail@example.com&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;要关联一个远程库，使用命令 &lt;code&gt;git remote add origin git@server-name:path/repo-name.git&lt;/code&gt;&lt;ol&gt;
&lt;li&gt;关联后，使用命令 &lt;code&gt;git push -u origin master&lt;/code&gt; 第一次推送 &lt;code&gt;master&lt;/code&gt; 分支的所有内容&lt;/li&gt;
&lt;li&gt;此后，每次本地提交后，只要有必要，就可以使用命令 &lt;code&gt;git push origin master&lt;/code&gt; 推送最新修改&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;分支管理&quot;&gt;&lt;a href=&quot;#分支管理&quot; class=&quot;headerlink&quot; title=&quot;分支管理&quot;&gt;&lt;/a&gt;分支管理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建并切换分支&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git checkout -b dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  等同于以下两行命令&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git branch dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git checkout dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在dev branch上提交&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git add readme.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;branch test&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;现在，dev分支的工作完成，我们就可以切换回master分支：&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git checkout master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;切换到&lt;code&gt;master&lt;/code&gt;分支后，合并&lt;code&gt;dev&lt;/code&gt;分支到&lt;code&gt;master&lt;/code&gt;分支&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git merge dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合并完成后，就可以放心地删除dev分支了：&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git branch &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;解决冲突&quot;&gt;&lt;a href=&quot;#解决冲突&quot; class=&quot;headerlink&quot; title=&quot;解决冲突&quot;&gt;&lt;/a&gt;解决冲突&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;合并不同分支可能会产生冲突，比如修改了同一行内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;分支策略&quot;&gt;&lt;a href=&quot;#分支策略&quot; class=&quot;headerlink&quot; title=&quot;分支策略&quot;&gt;&lt;/a&gt;分支策略&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先，仍然创建并切换dev分支：&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git checkout -b dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Switched to a new branch &lt;span class=&quot;string&quot;&gt;&#39;dev&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改readme.txt文件，并提交一个新的commit：&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git add readme.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;add merge&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[dev 6224937] add merge&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;现在，我们切换回master：&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git checkout master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Switched to branch &lt;span class=&quot;string&quot;&gt;&#39;master&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;准备合并dev分支，请注意–no-ff参数，表示禁用Fast forward：&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git merge --no-ff -m &lt;span class=&quot;string&quot;&gt;&quot;merge with no-ff&quot;&lt;/span&gt; dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Merge made by the &lt;span class=&quot;string&quot;&gt;&#39;recursive&#39;&lt;/span&gt; strategy.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;readme.txt |    1 +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;因为本次合并要创建一个新的commit，所以加上-m参数，把commit描述写进去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;合并后，我们用git log看看分支历史：  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt; --graph --pretty=oneline --abbrev-commit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*   7825a50 merge with no-ff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| * 6224937 add merge&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*   59bc1cb conflict fixed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;BUG分支&quot;&gt;&lt;a href=&quot;#BUG分支&quot; class=&quot;headerlink&quot; title=&quot;BUG分支&quot;&gt;&lt;/a&gt;BUG分支&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git stash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Saved working directory and index state WIP on dev: 6224937 add merge&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HEAD is now at 6224937 add merge&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;stash之后，可以checkout到其他分支处理bug，处理完bug切到当前分支，&lt;code&gt;git stash pop&lt;/code&gt;回到工作现场&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;删除未经合并的分支&quot;&gt;&lt;a href=&quot;#删除未经合并的分支&quot; class=&quot;headerlink&quot; title=&quot;删除未经合并的分支&quot;&gt;&lt;/a&gt;删除未经合并的分支&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;删除未经合并的分支，会提示删除失败&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git branch &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; feature-v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;error: The branch &lt;span class=&quot;string&quot;&gt;&#39;feature-v&#39;&lt;/span&gt; is not fully merged.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If you are sure you want to delete it, run &lt;span class=&quot;string&quot;&gt;&#39;git branch -D feature-v&#39;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  此时需要使用&lt;code&gt;git branch -D feature-v&lt;/code&gt;来强制删除&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;多人协作&quot;&gt;&lt;a href=&quot;#多人协作&quot; class=&quot;headerlink&quot; title=&quot;多人协作&quot;&gt;&lt;/a&gt;多人协作&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;多人协作的工作模式通常是这样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先，可以试图用 &lt;code&gt;git push origin branch-name&lt;/code&gt; 推送自己的修改；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果推送失败，则因为远程分支比你的本地更新，需要先用 &lt;code&gt;git pull&lt;/code&gt; 试图合并；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果合并有冲突，则解决冲突，并在本地提交；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;没有冲突或者解决掉冲突后，再用 &lt;code&gt;git push origin branch-name&lt;/code&gt; 推送就能成功！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果 &lt;code&gt;git pull&lt;/code&gt; 提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令 &lt;code&gt;git branch --set-upstream branch-name origin/branch-name&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Note-for-learn-git-tool&quot;&gt;&lt;a href=&quot;#Note-for-learn-git-tool&quot; class=&quot;headerlink&quot; title=&quot;Note for learn git tool&quot;&gt;&lt;/a&gt;Note for learn git tool&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;2016/12/2&lt;br&gt;Chuck&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;远程仓库&quot;&gt;&lt;a href=&quot;#远程仓库&quot; class=&quot;headerlink&quot; title=&quot;远程仓库&quot;&gt;&lt;/a&gt;远程仓库&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;创建SSH key &lt;code&gt;$ ssh-keygen -t rsa -C &amp;quot;youremail@example.com&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;要关联一个远程库，使用命令 &lt;code&gt;git remote add origin git@server-name:path/repo-name.git&lt;/code&gt;&lt;ol&gt;
&lt;li&gt;关联后，使用命令 &lt;code&gt;git push -u origin master&lt;/code&gt; 第一次推送 &lt;code&gt;master&lt;/code&gt; 分支的所有内容&lt;/li&gt;
&lt;li&gt;此后，每次本地提交后，只要有必要，就可以使用命令 &lt;code&gt;git push origin master&lt;/code&gt; 推送最新修改&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://pages.fedt.xin/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Github" scheme="http://pages.fedt.xin/tags/Github/"/>
    
      <category term="Git" scheme="http://pages.fedt.xin/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>《JavaScript高级程序设计》学习-22.4-自定义事件</title>
    <link href="http://pages.fedt.xin/2016/08/17/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6/"/>
    <id>http://pages.fedt.xin/2016/08/17/自定义事件/</id>
    <published>2016-08-16T16:00:00.000Z</published>
    <updated>2016-08-17T15:52:00.401Z</updated>
    
    <content type="html">&lt;h2 id=&quot;自定义事件基本模式&quot;&gt;&lt;a href=&quot;#自定义事件基本模式&quot; class=&quot;headerlink&quot; title=&quot;自定义事件基本模式&quot;&gt;&lt;/a&gt;自定义事件基本模式&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;EventTarget&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers = &amp;#123;&amp;#125;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EventTarget.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;: EventTarget,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addHandler: function(type, handler)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type] == &lt;span class=&quot;string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type] = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type].push(handler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fire: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!event.target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.target = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[event.type] &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; handlers = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[event.type];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len=handlers.length; i &amp;lt; len; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                handlers[i](event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeHandler: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type, handler&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type] &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; handlers = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len=handlers.length; i &amp;lt; len; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (handlers[i] === handler)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            handlers.splice(i, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;使用EventTarget类型的自定义事件&quot;&gt;&lt;a href=&quot;#使用EventTarget类型的自定义事件&quot; class=&quot;headerlink&quot; title=&quot;使用EventTarget类型的自定义事件&quot;&gt;&lt;/a&gt;使用EventTarget类型的自定义事件&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleMessage&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(&lt;span class=&quot;string&quot;&gt;&quot;Message received: &quot;&lt;/span&gt; + event.message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; target = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EventTarget();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target.addHandler(&lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;, handleMessage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target.fire(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	type: &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message: &lt;span class=&quot;string&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target.removeHandler(&lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;, handleMessage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target.fire(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	type: &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message: &lt;span class=&quot;string&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;其它对象继承EventTarget&quot;&gt;&lt;a href=&quot;#其它对象继承EventTarget&quot; class=&quot;headerlink&quot; title=&quot;其它对象继承EventTarget&quot;&gt;&lt;/a&gt;其它对象继承EventTarget&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;object&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;o&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;F&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	F.prototype = o;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; F();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;inheritPrototype&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;subType, superType&lt;/span&gt;) &lt;/span&gt;&amp;#123;  &lt;span class=&quot;comment&quot;&gt;//使用寄生组合继承&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; prototype = object(superType.prototype); &lt;span class=&quot;comment&quot;&gt;//create object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	prototype.constructor = subType; &lt;span class=&quot;comment&quot;&gt;//augment object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	subType.prototype = prototype; &lt;span class=&quot;comment&quot;&gt;//assign object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name, age&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	EventTarget.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inheritPrototype(Person, EventTarget);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Person.prototype.say = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;message&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fire(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		type: &lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		message: message&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleMessage&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(event.target.name + &lt;span class=&quot;string&quot;&gt;&quot; says: &quot;&lt;/span&gt; + event.message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.addHandler(&lt;span class=&quot;string&quot;&gt;&quot;message&quot;&lt;/span&gt;, handleMessage);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;person.say(&lt;span class=&quot;string&quot;&gt;&quot;Hi there.&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;自定义事件基本模式&quot;&gt;&lt;a href=&quot;#自定义事件基本模式&quot; class=&quot;headerlink&quot; title=&quot;自定义事件基本模式&quot;&gt;&lt;/a&gt;自定义事件基本模式&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;EventTarget&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers = &amp;#123;&amp;#125;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EventTarget.prototype = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;: EventTarget,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addHandler: function(type, handler)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type] == &lt;span class=&quot;string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type] = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type].push(handler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fire: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!event.target)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event.target = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[event.type] &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; handlers = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[event.type];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len=handlers.length; i &amp;lt; len; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                handlers[i](event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    removeHandler: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type, handler&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type] &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; handlers = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handlers[type];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len=handlers.length; i &amp;lt; len; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (handlers[i] === handler)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            handlers.splice(i, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="笔记整理" scheme="http://pages.fedt.xin/categories/%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="JavaScript" scheme="http://pages.fedt.xin/tags/JavaScript/"/>
    
      <category term="原生JS" scheme="http://pages.fedt.xin/tags/%E5%8E%9F%E7%94%9FJS/"/>
    
  </entry>
  
  <entry>
    <title>用 Canvas 编织璀璨星空图</title>
    <link href="http://pages.fedt.xin/2016/06/14/Canvas-CyandevToys/"/>
    <id>http://pages.fedt.xin/2016/06/14/Canvas-CyandevToys/</id>
    <published>2016-06-13T16:00:00.000Z</published>
    <updated>2016-06-13T17:28:36.488Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;转载自： &lt;a href=&quot;http://www.jianshu.com/p/f5c0f9c4bc39#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简书-用 Canvas 编织璀璨星空图&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;http://www.jianshu.com/users/c49454e0ae54&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cyandev&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先来看看最终的效果：&lt;br&gt;&lt;img src=&quot;/images/CyandevToys.png&quot; alt=&quot;璀璨星空图&quot;&gt;&lt;/p&gt;
&lt;p&gt;GitHub项目: &lt;a href=&quot;https://github.com/unixzii/CyandevToys/tree/master/ParticleWeb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CyandevToys / ParticleWeb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;是不是还蛮酷的呢？本文我们就来一点一点分析怎么实现它！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;首先我们看看这个效果具体有那些要点。首先，这么炫酷的效果肯定是要用到 Canvas 了，每个星星可以看作为一个粒子，因此，整个效果实际上就是粒子系统了。此外，我们可以发现每个粒子之间是相互连接的，只不过离的近的粒子之间的连线较粗且透明度较低，而离的远的则相反。&lt;/p&gt;
&lt;h2 id=&quot;开始-Coding&quot;&gt;&lt;a href=&quot;#开始-Coding&quot; class=&quot;headerlink&quot; title=&quot;开始 Coding&quot;&gt;&lt;/a&gt;开始 Coding&lt;/h2&gt;&lt;h3 id=&quot;HTML-部分&quot;&gt;&lt;a href=&quot;#HTML-部分&quot; class=&quot;headerlink&quot; title=&quot;HTML 部分&quot;&gt;&lt;/a&gt;HTML 部分&lt;/h3&gt;&lt;p&gt;这部分我就简单放了一个 &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 标签，设置样式使其填充全屏。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;620&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1360&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;canvas&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;position: absolute; height: 100%;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后为了让所有元素没有间距和内补，我还加了一条全局样式：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      margin: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      padding: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;JavaScript-部分&quot;&gt;&lt;a href=&quot;#JavaScript-部分&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 部分&quot;&gt;&lt;/a&gt;JavaScript 部分&lt;/h3&gt;&lt;p&gt;下面我们来写核心的代码。首先我们要得到那个 canvas 并得到绘制上下文：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; canvasEl = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ctx = canvasEl.getContext(&lt;span class=&quot;string&quot;&gt;&#39;2d&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mousePos = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;紧接着我们声明两个变量，分别用于存储“星星”和边：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; nodes = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; edges = [];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下一步，我们做些准备工作，就是让画布在窗口大小发生变化时重新绘制，并且调整自身分辨率：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onresize = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    canvasEl.width = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.clientWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    canvasEl.height = canvasEl.clientHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nodes.length == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      constructNodes();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onresize(); &lt;span class=&quot;comment&quot;&gt;// trigger the event manually.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们在第一次修改大小后构建了所有节点，这里就要用到下一个函数&lt;code&gt;（constructNodes）&lt;/code&gt;了&lt;/p&gt;
&lt;p&gt;这个函数中我们随机创建几个点，我们用字典对象的方式存储这些点的各个信息：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;constructNodes&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; node = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        drivenByMouse: i == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        x: &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * canvasEl.width,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y: &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * canvasEl.height,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vx: &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vy: &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        radius: &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() &amp;gt; &lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      nodes.push(node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nodes.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      nodes.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e2&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e == e2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; edge = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;: e,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          to: e2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addEdge(edge);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了实现后面一个更炫酷的效果，我给第一个点加了一个 drivenByMouse 属性，这个点的位置不会被粒子系统管理，也不会绘制出来，但是它会与其他点连线，这样就实现了鼠标跟随的效果了。&lt;/p&gt;
&lt;p&gt;这里稍微解释一下 radius 属性的取值，我希望让绝大部分点都是小半径的，而极少数的点半径比较大，所以我这里用了一点小 tricky，就是用概率控制点的半径取值，不断调整这个概率阈值就能获取期待的半径随机分布。&lt;/p&gt;
&lt;p&gt;点都构建完毕了，就要构建点与点之间的连线了，我们用到双重遍历，把两个点捆绑成一组，放到 &lt;code&gt;edges&lt;/code&gt; 数组中。注意这里我用了另外一个函数来完成这件事，而没有直接用 &lt;code&gt;edges.push()&lt;/code&gt; ，为什么？&lt;/p&gt;
&lt;p&gt;假设我们之前连接了 A、B两点，也就是外侧循环是A，内侧循环是B，那么在下一次循环中，外侧为B，内侧为A，是不是也会创建一条边呢？而实际上，这两个边除了方向不一样以外是完全一样的，这完全没有必要而且占用资源。因此我们在 addEdge 函数中进行一个判断：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addEdge&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;edge&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ignore = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edges.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e.from == edge.from &amp;amp;&amp;amp; e.to == edge.to) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ignore = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e.to == edge.from &amp;amp;&amp;amp; e.from == edge.to) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ignore = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ignore) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      edges.push(edge);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至此，我们的准备工作就完毕了，下面我们要让点动起来：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;step&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nodes.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e.drivenByMouse) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      e.x += e.vx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      e.y += e.vy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clamp&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;min, max, value&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value &amp;gt; max) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; max;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value &amp;lt; min) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; min;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e.x &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || e.x &amp;gt;= canvasEl.width) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.vx *= &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.x = clamp(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, canvasEl.width, e.x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e.y &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || e.y &amp;gt;= canvasEl.height) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.vy *= &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.y = clamp(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, canvasEl.height, e.y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    adjustNodeDrivenByMouse();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame(step);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;adjustNodeDrivenByMouse&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nodes[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].x += (mousePos[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] - nodes[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].x) / easingFactor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nodes[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].y += (mousePos[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] - nodes[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].y) / easingFactor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看到这么一大段代码不要害怕，其实做的事情很简单。这是粒子系统的核心，就是遍历粒子，并且更新其状态。更新的公式就是&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;v = v + a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = s + v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;a是加速度，v是速度，s是位移。由于我们这里不涉及加速度，所以就不写了。然后我们需要作一个边缘的碰撞检测，不然我们的“星星”都无拘无束地一点点飞～走～了～。边缘碰撞后的处理方式就是让速度矢量反转，这样粒子就会“掉头”回来。&lt;/p&gt;
&lt;p&gt;还记得我们需要做的鼠标跟随吗？也在这处理，我们让第一个点的位置一点一点移动到鼠标的位置，下面这个公式很有意思，可以轻松实现缓动：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;x = x + (t - x) / factor&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中 factor 是缓动因子，t 是最终位置，x 是当前位置。至于这个公式的解释还有个交互大神 Bret Victor 在他的演讲中提到过，视频做的非常好，有&lt;em&gt;条(ti)件(zi)&lt;/em&gt;大家一定要看看： &lt;a href=&quot;https://www.youtube.com/watch?v=ZfytHvgHybA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bret Victor - Stop Drawing Dead Fish&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好了，回到主题。我们在上面的函数中处理完了一帧中的数据，我们要让整个粒子系统连续地运转起来就需要一个timer了，但是十分不提倡大家使用 &lt;code&gt;setInterval&lt;/code&gt;，而是尽可能使用 &lt;code&gt;requestAnimationFrame&lt;/code&gt;，它能保证你的帧率锁定在 &amp;lt;= 60 fps ，不至于爆掉你的浏览器。函数参数即为回调函数，看起来有点像递归调用，但实际上，浏览器内部处理是将这个回调函数先入事件列队，等所有绘制计算工作完毕后再从列队中取出执行，十分高效。&lt;/p&gt;
&lt;p&gt;剩下的就是绘制啦：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ctx.fillStyle = backgroundColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ctx.fillRect(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, canvasEl.width, canvasEl.height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    edges.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; l = lengthOfEdge(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; threshold = canvasEl.width / &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (l &amp;gt; threshold) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.strokeStyle = edgeColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.lineWidth = (&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; - l / threshold) * &lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.globalAlpha = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; - l / threshold;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.beginPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.moveTo(e.from.x, e.from.y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.lineTo(e.to.x, e.to.y);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.stroke();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ctx.globalAlpha = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nodes.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (e.drivenByMouse) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.fillStyle = nodeColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.beginPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.arc(e.x, e.y, e.radius, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.PI);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ctx.fill();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;常规的 &lt;strong&gt;&lt;code&gt;Canvas&lt;/code&gt;&lt;/strong&gt; 绘图操作，注意 &lt;code&gt;beginPath&lt;/code&gt; 一定要调用，不然你的线就全部穿在一起了… 需要说明的是，在绘制边的时候，我们先要计算两点距离，然后根据一个阈值来判断是否要绘制这条边，这样我们才能实现距离远的点之间连线不可见的效果。&lt;/p&gt;
&lt;p&gt;到这里，我们的整个效果就完成了。如果不明白大家也可以去我文章开头放的 repo 离去看完整的源码。Have fun!!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转载自： &lt;a href=&quot;http://www.jianshu.com/p/f5c0f9c4bc39#&quot;&gt;简书-用 Canvas 编织璀璨星空图&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;http://www.jianshu.com/users/c49454e0ae54&quot;&gt;Cyandev&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先来看看最终的效果：&lt;br&gt;&lt;img src=&quot;/images/CyandevToys.png&quot; alt=&quot;璀璨星空图&quot;&gt;&lt;/p&gt;
&lt;p&gt;GitHub项目: &lt;a href=&quot;https://github.com/unixzii/CyandevToys/tree/master/ParticleWeb&quot;&gt;CyandevToys / ParticleWeb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;是不是还蛮酷的呢？本文我们就来一点一点分析怎么实现它！&lt;/p&gt;
    
    </summary>
    
      <category term="精品转载" scheme="http://pages.fedt.xin/categories/%E7%B2%BE%E5%93%81%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="JavaScript" scheme="http://pages.fedt.xin/tags/JavaScript/"/>
    
      <category term="Canvas" scheme="http://pages.fedt.xin/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>《JavaScript高级程序设计》学习-5.2-Array</title>
    <link href="http://pages.fedt.xin/2016/05/31/professionalJS-Array/"/>
    <id>http://pages.fedt.xin/2016/05/31/professionalJS-Array/</id>
    <published>2016-05-30T16:00:00.000Z</published>
    <updated>2016-06-13T17:13:16.144Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;《JavaScript高级程序设计》俗称“红宝书”，一直被列为前端人员必读经典，奉为前端圣经。买红宝书到现在很久了，刚开始一直拿他当工具书用，买了不久我又入手了更为适合当工具书的“犀牛书”，所以到现在红宝书都还没有完整的过一遍，实感不安。最近计划利用闲暇时间过一遍，为加深印象留下笔记。此为第五章：引用类型中的第三节：Array类型的讲解，较为基础。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Array类型&quot;&gt;&lt;a href=&quot;#Array类型&quot; class=&quot;headerlink&quot; title=&quot;Array类型&quot;&gt;&lt;/a&gt;Array类型&lt;/h2&gt;&lt;p&gt;ECMAScript中的数组是常用的引用类型之一，秉承js松散类型的特点，js数组的每一项都可以保存任何类型的数据，并且数组的大小是可以动态调整的。&lt;br&gt;数组的基本创建方法有两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用Array构造函数：&lt;code&gt;var arr = new Array(3)&lt;/code&gt;；&lt;br&gt;如上写法创建了一个长度为3的数组，&lt;/li&gt;
&lt;li&gt;使用数组字面量：&lt;code&gt;var arr = [1,2,3]&lt;/code&gt;；&lt;br&gt;此写法较为常用，需要注意的是&lt;code&gt;[1,2,]&lt;/code&gt;这种最后一项为空的写法IE8-会认为数组长度为2，而现代浏览器会认为长度为3，故尽量避免出现该问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以改变数组的&lt;code&gt;length&lt;/code&gt;属性值来为数组扩容（缩容），扩容后的数组被跳过的项的指为&lt;code&gt;undefined&lt;/code&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;检测数组&quot;&gt;&lt;a href=&quot;#检测数组&quot; class=&quot;headerlink&quot; title=&quot;检测数组&quot;&gt;&lt;/a&gt;检测数组&lt;/h2&gt;&lt;p&gt;检测一个对象是不是数组有2种方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;instanceof&lt;/code&gt;操作符：&lt;code&gt;value instanceof Array&lt;/code&gt;;&lt;br&gt;解读为value是否为Array的一个实例。该方法的局限性在于：假定只有一个全局执行环境。&lt;/li&gt;
&lt;li&gt;使用ES5中新增的&lt;code&gt;Array.isArray()&lt;/code&gt;方法；&lt;br&gt;该方法判断准确，但只能在现代浏览器中使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;数组方法&quot;&gt;&lt;a href=&quot;#数组方法&quot; class=&quot;headerlink&quot; title=&quot;数组方法&quot;&gt;&lt;/a&gt;数组方法&lt;/h2&gt;&lt;h3 id=&quot;转换方法&quot;&gt;&lt;a href=&quot;#转换方法&quot; class=&quot;headerlink&quot; title=&quot;转换方法&quot;&gt;&lt;/a&gt;转换方法&lt;/h3&gt;&lt;p&gt;数组继承对象的&lt;code&gt;toLocaleString()&lt;/code&gt;，&lt;code&gt;toString()&lt;/code&gt;，&lt;code&gt;valueOf()&lt;/code&gt;方法。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; colors = [&lt;span class=&quot;string&quot;&gt;&#39;red&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;green&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;blue&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(colors.toString());  &lt;span class=&quot;comment&quot;&gt;//red,green,blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(colors.valueOf());   &lt;span class=&quot;comment&quot;&gt;//red,green,blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(colors);             &lt;span class=&quot;comment&quot;&gt;//red,green,blue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;直接alert数组时会隐式的调用数组的&lt;code&gt;toString()&lt;/code&gt;方法。这三种方法都是返回数组中每个元素以&lt;code&gt;,&lt;/code&gt;分隔的结果，可以调用数组的&lt;code&gt;join(&amp;quot;分隔符&amp;quot;)&lt;/code&gt;来以自定义的分隔符分隔数组。&lt;/p&gt;
&lt;h3 id=&quot;栈方法&quot;&gt;&lt;a href=&quot;#栈方法&quot; class=&quot;headerlink&quot; title=&quot;栈方法&quot;&gt;&lt;/a&gt;栈方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;push()&lt;/code&gt;:添加任意项到数组末尾–推入，末尾入栈&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pop()&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;未完待续&quot;&gt;&lt;a href=&quot;#未完待续&quot; class=&quot;headerlink&quot; title=&quot;未完待续&quot;&gt;&lt;/a&gt;未完待续&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;《JavaScript高级程序设计》俗称“红宝书”，一直被列为前端人员必读经典，奉为前端圣经。买红宝书到现在很久了，刚开始一直拿他当工具书用，买了不久我又入手了更为适合当工具书的“犀牛书”，所以到现在红宝书都还没有完整的过一遍，实感不安。最近计划利用闲暇时间过一遍，为加深印象留下笔记。此为第五章：引用类型中的第三节：Array类型的讲解，较为基础。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Array类型&quot;&gt;&lt;a href=&quot;#Array类型&quot; class=&quot;headerlink&quot; title=&quot;Array类型&quot;&gt;&lt;/a&gt;Array类型&lt;/h2&gt;&lt;p&gt;ECMAScript中的数组是常用的引用类型之一，秉承js松散类型的特点，js数组的每一项都可以保存任何类型的数据，并且数组的大小是可以动态调整的。&lt;br&gt;数组的基本创建方法有两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用Array构造函数：&lt;code&gt;var arr = new Array(3)&lt;/code&gt;；&lt;br&gt;如上写法创建了一个长度为3的数组，&lt;/li&gt;
&lt;li&gt;使用数组字面量：&lt;code&gt;var arr = [1,2,3]&lt;/code&gt;；&lt;br&gt;此写法较为常用，需要注意的是&lt;code&gt;[1,2,]&lt;/code&gt;这种最后一项为空的写法IE8-会认为数组长度为2，而现代浏览器会认为长度为3，故尽量避免出现该问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以改变数组的&lt;code&gt;length&lt;/code&gt;属性值来为数组扩容（缩容），扩容后的数组被跳过的项的指为&lt;code&gt;undefined&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记整理" scheme="http://pages.fedt.xin/categories/%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="JavaScript" scheme="http://pages.fedt.xin/tags/JavaScript/"/>
    
      <category term="原生JS" scheme="http://pages.fedt.xin/tags/%E5%8E%9F%E7%94%9FJS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客Bug：“{{”符号引起的生成报错</title>
    <link href="http://pages.fedt.xin/2016/05/24/HexoBug/"/>
    <id>http://pages.fedt.xin/2016/05/24/HexoBug/</id>
    <published>2016-05-23T16:00:00.000Z</published>
    <updated>2016-05-24T14:43:08.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;使用Hexo写博客的一个小插曲&quot;&gt;&lt;a href=&quot;#使用Hexo写博客的一个小插曲&quot; class=&quot;headerlink&quot; title=&quot;使用Hexo写博客的一个小插曲&quot;&gt;&lt;/a&gt;使用Hexo写博客的一个小插曲&lt;/h2&gt;&lt;p&gt;从发现Hexo那天起，他就让我难以忘怀。这个小巧的静态博客框架搭建简单，无需复杂的配置，更不用自己写一行的代码就可以圆自己的博客梦。这让我这样对后台一无所知的小白也搜集教程，搭建了现在的这个博客。&lt;br&gt;Hexo的使用非常简便，写好markdown文件后只需要一个简单的指令&lt;code&gt;hexo d -g&lt;/code&gt;就能完成从md到html的编译并且部署到服务器。&lt;br&gt;新博客搭建不久当我写到第6篇博客&lt;a href=&quot;http://pages.fedt.xin/2016/05/22/AvalonJS01/&quot;&gt;AvalonJS系列01之快速入门&lt;/a&gt;时，突然出现了问题：输入&lt;code&gt;hexo generate&lt;/code&gt;指令生成时报错了！错误提示如下：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  Start processing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FATAL Something&amp;apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Template render error: (unknown path) [Line 20, Column 83]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  unexpected token: &amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Object.exports.prettifyError (E:\Hexo\node_modules\nunjucks\src\lib.js:34:15)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Obj.extend.render (E:\Hexo\node_modules\nunjucks\src\environment.js:468:27)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Obj.extend.renderString (E:\Hexo\node_modules\nunjucks\src\environment.js:326:21)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at E:\Hexo\node_modules\hexo\lib\extend\tag.js:66:9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._execute (E:\Hexo\node_modules\bluebird\js\release\debuggability.js:272:9)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._resolveFromExecutor (E:\Hexo\node_modules\bluebird\js\release\promise.js:473:18)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at new Promise (E:\Hexo\node_modules\bluebird\js\release\promise.js:77:14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Tag.render (E:\Hexo\node_modules\hexo\lib\extend\tag.js:64:10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Object.tagFilter [as onRenderEnd] (E:\Hexo\node_modules\hexo\lib\hexo\post.js:253:16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at E:\Hexo\node_modules\hexo\lib\hexo\render.js:63:19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at tryCatcher (E:\Hexo\node_modules\bluebird\js\release\util.js:16:23)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._settlePromiseFromHandler (E:\Hexo\node_modules\bluebird\js\release\promise.js:502:31)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._settlePromise (E:\Hexo\node_modules\bluebird\js\release\promise.js:559:18)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._settlePromise0 (E:\Hexo\node_modules\bluebird\js\release\promise.js:604:10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._settlePromises (E:\Hexo\node_modules\bluebird\js\release\promise.js:683:18)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Async._drainQueue (E:\Hexo\node_modules\bluebird\js\release\async.js:138:16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Async._drainQueues (E:\Hexo\node_modules\bluebird\js\release\async.js:148:10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Immediate.Async.drainQueues [as _onImmediate] (E:\Hexo\node_modules\bluebird\js\release\async.js:17:14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at tryOnImmediate (timers.js:543:15)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at processImmediate [as _immediateCallback] (timers.js:523:5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FATAL (unknown path) [Line 20, Column 83]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  unexpected token: &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Template render error: (unknown path) [Line 20, Column 83]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  unexpected token: &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Object.exports.prettifyError (E:\Hexo\node_modules\nunjucks\src\lib.js:34:15)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Obj.extend.render (E:\Hexo\node_modules\nunjucks\src\environment.js:468:27)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Obj.extend.renderString (E:\Hexo\node_modules\nunjucks\src\environment.js:326:21)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at E:\Hexo\node_modules\hexo\lib\extend\tag.js:66:9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._execute (E:\Hexo\node_modules\bluebird\js\release\debuggability.js:272:9)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._resolveFromExecutor (E:\Hexo\node_modules\bluebird\js\release\promise.js:473:18)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at new Promise (E:\Hexo\node_modules\bluebird\js\release\promise.js:77:14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Tag.render (E:\Hexo\node_modules\hexo\lib\extend\tag.js:64:10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Object.tagFilter [as onRenderEnd] (E:\Hexo\node_modules\hexo\lib\hexo\post.js:253:16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at E:\Hexo\node_modules\hexo\lib\hexo\render.js:63:19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at tryCatcher (E:\Hexo\node_modules\bluebird\js\release\util.js:16:23)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._settlePromiseFromHandler (E:\Hexo\node_modules\bluebird\js\release\promise.js:502:31)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._settlePromise (E:\Hexo\node_modules\bluebird\js\release\promise.js:559:18)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._settlePromise0 (E:\Hexo\node_modules\bluebird\js\release\promise.js:604:10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Promise._settlePromises (E:\Hexo\node_modules\bluebird\js\release\promise.js:683:18)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Async._drainQueue (E:\Hexo\node_modules\bluebird\js\release\async.js:138:16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Async._drainQueues (E:\Hexo\node_modules\bluebird\js\release\async.js:148:10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Immediate.Async.drainQueues [as _onImmediate] (E:\Hexo\node_modules\bluebird\js\release\async.js:17:14)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at tryOnImmediate (timers.js:543:15)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at processImmediate [as _immediateCallback] (timers.js:523:5)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我自然是看不懂这是什么错，所以我只好重新安装一遍Hexo。但是当我再次生成时，仍然报这个错！！&lt;br&gt;这就有点尴尬了，一直都是简单无脑的Hexo为什么今天就调皮了呢？&lt;br&gt;随后我试着还原我之前的一些更改，当我删掉那篇博客后就能正常生成了。。这一现象让我把注意力放在了我的md文件上！&lt;br&gt;但是我一直都是这样写的，md文件没有什么语法错误，markdownPad生成的html也是正常的。于是我试着去看那冗长的错误提示：果然，第五行赫然写着&lt;code&gt;unexpected token: }}&lt;/code&gt;！！我查看我的md文件，其中果然出现了“{ { } }”！！&lt;br&gt;问题就出在这“{ {”上面，他会让Hexo编译失败并报错！&lt;br&gt;找到了问题所在，但我并没有找到怎么解决这个问题，所以我只好用空格符隔开“{”，这样就不会生成失败啦！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用Hexo写博客的一个小插曲&quot;&gt;&lt;a href=&quot;#使用Hexo写博客的一个小插曲&quot; class=&quot;headerlink&quot; title=&quot;使用Hexo写博客的一个小插曲&quot;&gt;&lt;/a&gt;使用Hexo写博客的一个小插曲&lt;/h2&gt;&lt;p&gt;从发现Hexo那天起，他就让我难以忘怀。这个小巧的静态博客框架搭建简单，无需复杂的配置，更不用自己写一行的代码就可以圆自己的博客梦。这让我这样对后台一无所知的小白也搜集教程，搭建了现在的这个博客。&lt;br&gt;Hexo的使用非常简便，写好markdown文件后只需要一个简单的指令&lt;code&gt;hexo d -g&lt;/code&gt;就能完成从md到html的编译并且部署到服务器。&lt;br&gt;新博客搭建不久当我写到第6篇博客&lt;a href=&quot;http://pages.fedt.xin/2016/05/22/AvalonJS01/&quot;&gt;AvalonJS系列01之快速入门&lt;/a&gt;时，突然出现了问题：输入&lt;code&gt;hexo generate&lt;/code&gt;指令生成时报错了！错误提示如下：&lt;/p&gt;
    
    </summary>
    
      <category term="技术分享" scheme="http://pages.fedt.xin/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Hexo" scheme="http://pages.fedt.xin/tags/Hexo/"/>
    
      <category term="Hexo bug" scheme="http://pages.fedt.xin/tags/Hexo-bug/"/>
    
  </entry>
  
  <entry>
    <title>AvalonJS系列01之快速入门</title>
    <link href="http://pages.fedt.xin/2016/05/22/AvalonJS01/"/>
    <id>http://pages.fedt.xin/2016/05/22/AvalonJS01/</id>
    <published>2016-05-21T16:00:00.000Z</published>
    <updated>2016-05-24T14:02:19.650Z</updated>
    
    <content type="html">&lt;h2 id=&quot;关于AvalonJS&quot;&gt;&lt;a href=&quot;#关于AvalonJS&quot; class=&quot;headerlink&quot; title=&quot;关于AvalonJS&quot;&gt;&lt;/a&gt;关于AvalonJS&lt;/h2&gt;&lt;h3 id=&quot;AvalonJS简介&quot;&gt;&lt;a href=&quot;#AvalonJS简介&quot; class=&quot;headerlink&quot; title=&quot;AvalonJS简介&quot;&gt;&lt;/a&gt;AvalonJS简介&lt;/h3&gt;&lt;p&gt;avalon是一个简单易用迷你的MVVM框架，为解决同一业务逻辑存在各种视图呈现而开发出来的。&lt;br&gt;MVVM将所有前端代码彻底分成两部分，视图的处理通过绑定实现（angular中叫指令）， 业务逻辑则集中在一个个叫VM的对象中处理。我们只要操作VM的数据，它就自然而然地神奇地同步到视图。&lt;br&gt;avalon的所有指令都是以ms-*命名。跟MicroSoft并没有关系。&lt;/p&gt;
&lt;h3 id=&quot;AvalonJS的优势&quot;&gt;&lt;a href=&quot;#AvalonJS的优势&quot; class=&quot;headerlink&quot; title=&quot;AvalonJS的优势&quot;&gt;&lt;/a&gt;AvalonJS的优势&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;绝对的优势就是降低了耦合， 让开发者从复杂的各种事件中挣脱出来。 举一个简单地例子， 同一个状态可能跟若干个事件的发生顺序与发生时的附加参数都有关系， 不用 MVC (包括 MVVM) 的情况下, 逻辑可能非常复杂而且脆弱。 并且通常需要在不同的地方维护相关度非常高的一些逻辑， 稍有疏忽就会酿成 bug 不能自拔。使用这类框架能从根本上降低应用开发的逻辑难度， 并且让应用更稳健。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;除此之外， 也免去了一些重复的体力劳动， 一个 {value} 就代替了一行 $(selector).text(value)。 一些个常用的 directive 也能快速实现一些原本可能需要较多代码才能实现的功能&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;国产框架，文档易于阅读理解。对于我这种英语捉急的来说简直福音。。&lt;/li&gt;
&lt;li&gt;容易上手，没有太多复杂的概念， 指令数量控制得当，个人感觉酷似angular&lt;/li&gt;
&lt;li&gt;兼容性非常好， 支持IE6+，firefox3.5+, opera11+, safari5+, chrome4，甚至兼容很多的国产山寨浏览器（&lt;del&gt;这个不能算优点，只是符合国情。低版本和山寨浏览器都得死&lt;/del&gt;~~）&lt;/li&gt;
&lt;li&gt;无DOM操作。这是所有VMMV框架的一个共性，让开发者投入业务逻辑开发而不用在头疼的DOM操作上浪费时间&lt;/li&gt;
&lt;li&gt;使用类似CSS的重叠覆盖机制，让各个ViewModel分区交替地渲染页面&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;avalon现在有三个分支&quot;&gt;&lt;a href=&quot;#avalon现在有三个分支&quot; class=&quot;headerlink&quot; title=&quot;avalon现在有三个分支:&quot;&gt;&lt;/a&gt;avalon现在有三个分支:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;avalon.js 兼容IE6，标准浏览器, 及主流山寨浏览器(QQ, 猎豹, 搜狗, 360, 傲游);&lt;/li&gt;
&lt;li&gt;avalon.modern.js 则只支持IE10等支持HTML5现代浏览器 ; &lt;/li&gt;
&lt;li&gt;avalon.mobile.js，添加了触屏事件与fastclick支持，用于移动端。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;初探AvalonJS&quot;&gt;&lt;a href=&quot;#初探AvalonJS&quot; class=&quot;headerlink&quot; title=&quot;初探AvalonJS&quot;&gt;&lt;/a&gt;初探AvalonJS&lt;/h2&gt;&lt;h3 id=&quot;avalon简单实例&quot;&gt;&lt;a href=&quot;#avalon简单实例&quot; class=&quot;headerlink&quot; title=&quot;avalon简单实例&quot;&gt;&lt;/a&gt;avalon简单实例&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;avalon.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ms-controller&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot; background: #a9ea00;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ms-css-width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ms-css-height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;h&quot;&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;ms-click&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;click&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123; w &amp;#125;&amp;#125; x &amp;#123;&amp;#123; h &amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;W: &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ms-duplex&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;w&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-duplex-event&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;change&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;H: &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;ms-duplex&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;h&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              var vm = avalon.define(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 $id: &quot;box&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  w: 100,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  h: 100,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  click: function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    vm.w = parseFloat(vm.w) + 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    vm.h = parseFloat(vm.h) + 10;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码中，我们可以看到在JS中，没有任何一行操作DOM的代码，也没有选择器，非常干净。在HTML中， 我们发现就是多了一些以ms-开始的属性与&lt;code&gt;{ { } }&lt;/code&gt;标记，有的是用于渲染样式， 有的是用于绑定事件。这些属性或标记，实质就是avalon的绑定系统的一部分。绑定（有的框架也将之称为指令）， 负责帮我们完成视图的各种操作，相当于一个隐形的jQuery。正因为有了绑定，我们就可以在JS代码专注业务逻辑本身， 写得更易维护的代码！&lt;/p&gt;
&lt;h3 id=&quot;扫描&quot;&gt;&lt;a href=&quot;#扫描&quot; class=&quot;headerlink&quot; title=&quot;扫描&quot;&gt;&lt;/a&gt;扫描&lt;/h3&gt;&lt;p&gt;不过上面的代码并不完整，它能工作，是因为框架默认会在&lt;code&gt;DOMReady&lt;/code&gt;时扫描DOM树，将视图中的绑定属性与&lt;code&gt;{ { } }&lt;/code&gt;插值表达式抽取出来，转换为求值函数与视图刷新函数。&lt;/p&gt;
&lt;p&gt;上面的JS代码相当于：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;avalon.ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; vm = avalon.define(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          $id: &lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          w: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          h: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          click: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             vm.w = &lt;span class=&quot;built_in&quot;&gt;parseFloat&lt;/span&gt;(vm.w) + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             vm.h = &lt;span class=&quot;built_in&quot;&gt;parseFloat&lt;/span&gt;(vm.h) + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      avalon.scan()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;avalon.scan&lt;/code&gt;&lt;/strong&gt;是一个非常重要的方法，它有&lt;strong&gt;两个&lt;/strong&gt;可选参数，第一个是扫描的起点元素，默认是HTML标签，第2个是VM对象。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    avalon.scan = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;elem, vmodel&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        elem = elem || root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; vmodels = vmodel ? [].concat(vmodel) : []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scanTag(elem, vmodels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;视图模型&quot;&gt;&lt;a href=&quot;#视图模型&quot; class=&quot;headerlink&quot; title=&quot;视图模型&quot;&gt;&lt;/a&gt;视图模型&lt;/h3&gt;&lt;p&gt;视图模型，&lt;code&gt;ViewModel&lt;/code&gt;，也经常被略写成VM，是通过&lt;code&gt;avalon.define&lt;/code&gt;方法进行定义。生成的对象会默认放到&lt;code&gt;avalon.vmodels&lt;/code&gt;对象上。 每个VM在定义时必须指定$id。如果你有某些属性不想监听，可以直接将此属性名放到&lt;code&gt;$skipArray&lt;/code&gt;数组中。&lt;/p&gt;
&lt;p&gt;接着我们说一些重要的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;$id&lt;/code&gt;&lt;/strong&gt;， 每个VM都有$id，如果VM的某一个属性是对象（并且它是可监控的），也会转换为一个VM，这个子VM也会默认加上一个$id。 但只有用户添加的那个最外面的$id会注册到&lt;code&gt;avalon.vmodels&lt;/code&gt;对象上。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监控属性&lt;/strong&gt;，一般地，VM中的属性都会转换为此种属性，当我们以&lt;code&gt;vm.aaa = yyy&lt;/code&gt;这种形式更改其值时，就会同步到视图上的对应位置上。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;计算属性&lt;/strong&gt;，定义时为一个对象，并且只存在set,get两个函数或只有一个get一个函数。它是监控属性的高级形式，表示它的值是通过函数计算出来的，是依赖于其他属性合成出来的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监控数组&lt;/strong&gt;，定义时为一个数组，它会添加了许多新方法，但一般情况下与普通数组无异，但调用它的&lt;code&gt;push&lt;/code&gt;, &lt;code&gt;unshift&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;等方法会同步视图。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;非监控属性&lt;/strong&gt;，这包括框架添加的$id属性，以&lt;strong&gt;$开头的属性&lt;/strong&gt;，放在&lt;strong&gt;&lt;code&gt;$skipArray&lt;/code&gt;&lt;/strong&gt;数组中的属性，值为&lt;strong&gt;函数、元素节点、文本节点&lt;/strong&gt;的属性，总之，改变它们的值不会产生同步视图的效果。&lt;br&gt;&lt;code&gt;$skipArray&lt;/code&gt; 是一个字符串数组，只能放&lt;strong&gt;当前对象的直接属性名&lt;/strong&gt;，想禁止子对象的某个属性的监听，在那个&lt;code&gt;子对象&lt;/code&gt;上再添加一个&lt;code&gt;$skipAray&lt;/code&gt;数组就行了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;视图里面，我们可以使用&lt;code&gt;ms-controller&lt;/code&gt;, &lt;code&gt;ms-important&lt;/code&gt;指定一个&lt;strong&gt;VM的作用域&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;此外，在&lt;code&gt;ms-each, ms-with，ms-repeat&lt;/code&gt;绑定属性中，它们会创建一个临时的VM，我们称之为代理VM， 用于放置&lt;code&gt;$key, $val, $index, $last, $first, $remove&lt;/code&gt;等变量或方法。&lt;/p&gt;
&lt;p&gt;另外，avalon&lt;strong&gt;不允许在VM定义之后，再追加新属性与方法&lt;/strong&gt;，也&lt;strong&gt;不允许在define里面直接调用方法或ajax&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;如何更新VM中的属性-重点-：&quot;&gt;&lt;a href=&quot;#如何更新VM中的属性-重点-：&quot; class=&quot;headerlink&quot; title=&quot;如何更新VM中的属性(重点)：&quot;&gt;&lt;/a&gt;如何更新VM中的属性(重点)：&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; model : avalon.define(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     $id:  &lt;span class=&quot;string&quot;&gt;&quot;update&quot;&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     aaa : &lt;span class=&quot;string&quot;&gt;&quot;str&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     bbb : &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ccc : &lt;span class=&quot;number&quot;&gt;1223&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     time : &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     simpleArray : [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     objectArray : [&amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;&amp;#125;, &amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;&amp;#125;, &amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;&amp;#125;, &amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;d&quot;&lt;/span&gt;&amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     object : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         o1: &lt;span class=&quot;string&quot;&gt;&quot;k1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         o2: &lt;span class=&quot;string&quot;&gt;&quot;k2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         o3: &lt;span class=&quot;string&quot;&gt;&quot;k3&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     simpleArray : [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     objectArray : [&amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;, value: &lt;span class=&quot;string&quot;&gt;&quot;aa&quot;&lt;/span&gt;&amp;#125;, &amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;, value: &lt;span class=&quot;string&quot;&gt;&quot;bb&quot;&lt;/span&gt;&amp;#125;, &amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;, value: &lt;span class=&quot;string&quot;&gt;&quot;cc&quot;&lt;/span&gt;&amp;#125;, &amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;d&quot;&lt;/span&gt;, value: &lt;span class=&quot;string&quot;&gt;&quot;dd&quot;&lt;/span&gt;&amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     object : &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         o1: &lt;span class=&quot;string&quot;&gt;&quot;k1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         o2: &lt;span class=&quot;string&quot;&gt;&quot;k2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         o3: &lt;span class=&quot;string&quot;&gt;&quot;k3&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//如果是更新简单数据类型（string, boolean, number）或Date类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           model.aaa = &lt;span class=&quot;string&quot;&gt;&quot;这是字符串&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           model.bbb = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           model.ccc = &lt;span class=&quot;number&quot;&gt;999999999999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; date = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           model.time = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(date.setFullYear(&lt;span class=&quot;number&quot;&gt;2005&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;, &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//如果是数组，注意保证它们的元素的类型是一致的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//只能全是字符串，或是全是布尔，不能有一些是这种类型，另一些是其他类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//这时我们可以使用set方法来更新（它有两个参数，第一个是index，第2个是新值）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           model.simpleArray.set(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           model.simpleArray.set(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           model.objectArray.set(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &amp;#123;name: &lt;span class=&quot;string&quot;&gt;&quot;xxxxxxxxxxxxxxxx&quot;&lt;/span&gt;, value: &lt;span class=&quot;string&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;, &lt;span class=&quot;number&quot;&gt;2500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           model.objectArray[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].name = &lt;span class=&quot;string&quot;&gt;&quot;5555&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;, &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//如果要更新对象，直接赋给它一个对象，注意不能将一个VM赋给它，可以到VM的$model赋给它（要不会在IE6-8中报错）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           model.object = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               aaaa: &lt;span class=&quot;string&quot;&gt;&quot;aaaa&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               bbbb: &lt;span class=&quot;string&quot;&gt;&quot;bbbb&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               cccc: &lt;span class=&quot;string&quot;&gt;&quot;cccc&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               dddd: &lt;span class=&quot;string&quot;&gt;&quot;dddd&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;, &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;绑定&quot;&gt;&lt;a href=&quot;#绑定&quot; class=&quot;headerlink&quot; title=&quot;绑定&quot;&gt;&lt;/a&gt;绑定&lt;/h3&gt;&lt;p&gt;avalon的绑定（或指令），拥有以下三种类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{ { } }&lt;/code&gt;插值表达式， 这是开标签与闭标签间，换言之，也是位于&lt;strong&gt;文本节点&lt;/strong&gt;中，&lt;code&gt;innerText&lt;/code&gt;里。&lt;code&gt;{ { } }&lt;/code&gt;里面可以添加各种过滤器（以|进行标识）。值得注意的是&lt;code&gt;{ { } }&lt;/code&gt;实际是文本绑定(&lt;code&gt;ms-text&lt;/code&gt;)的一种形式。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ms-*绑定属性， 这是位于开标签的内部， 95%的绑定都以这种形式存在。 它们的格式大概是这样划分的 &lt;code&gt;&amp;quot;ms&amp;quot; + type + &amp;quot;-&amp;quot; + param1 + &amp;quot;-&amp;quot; + param1 + &amp;quot;-&amp;quot; + param2 + ... + number = value&lt;/code&gt;。关于绑定属性指令将在&lt;a href=&quot;http://pages.fedt.xin/AvalonJS02/&quot;&gt;下一篇&lt;/a&gt;中详细说到。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ms-skip                &lt;span class=&quot;comment&quot;&gt;//这个绑定属性没有值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-controller=&lt;span class=&quot;string&quot;&gt;&quot;expr&quot;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//这个绑定属性没有参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;expr&quot;&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;//这个绑定属性没有参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;-loop=&lt;span class=&quot;string&quot;&gt;&quot;expr&quot;&lt;/span&gt;       &lt;span class=&quot;comment&quot;&gt;//这个绑定属性有一个参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-repeat-el=&lt;span class=&quot;string&quot;&gt;&quot;array&quot;&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;//这个绑定属性有一个参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-attr-href=&lt;span class=&quot;string&quot;&gt;&quot;xxxx&quot;&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;//这个绑定属性有一个参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-attr-src=&lt;span class=&quot;string&quot;&gt;&quot;xxx/&amp;#123;&amp;#123;a&amp;#125;&amp;#125;/yyy/&amp;#123;&amp;#123;b&amp;#125;&amp;#125;&quot;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//这个绑定属性的值包含插值表达式，注意只有少部分表示字符串类型的属性可以使用插值表达式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-click&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fn&quot;&lt;/span&gt;       &lt;span class=&quot;comment&quot;&gt;//这个绑定属性的名字最后有数字，这是方便我们绑定更多点击事件 ms-click-2=&quot;fn&quot;  ms-click-3=&quot;fn&quot;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-on-click=&lt;span class=&quot;string&quot;&gt;&quot;fn&quot;&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;//只有表示事件与类名的绑定属性的可以加数字，如这个也可以写成  ms-on-click-0=&quot;fn&quot;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;-1&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;xxx&quot;&lt;/span&gt; ms-&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;-2&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;yyy&quot;&lt;/span&gt; ms-&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;-3&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;xxx&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//数字还表示绑定的次序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-css-background-color=&lt;span class=&quot;string&quot;&gt;&quot;xxx&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//这个绑定属性有两个参数，但在css绑定里，相当于一个，会内部转换为backgroundColor &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ms-duplex-aaa-bbb-string=&lt;span class=&quot;string&quot;&gt;&quot;xxx&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//这个绑定属性有三个参数，表示三种不同的拦截操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;data-xxx-yyy=&amp;quot;xxx&amp;quot;&lt;/code&gt;，辅助指令，比如ms-duplex的某一个辅助指令为&lt;code&gt;data-duplex-event=&amp;quot;change&amp;quot;&lt;/code&gt;，&lt;code&gt;ms-repeat&lt;/code&gt;的某一个辅助指令为&lt;code&gt;data-repeat-rendered=&amp;quot;yyy&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于AvalonJS&quot;&gt;&lt;a href=&quot;#关于AvalonJS&quot; class=&quot;headerlink&quot; title=&quot;关于AvalonJS&quot;&gt;&lt;/a&gt;关于AvalonJS&lt;/h2&gt;&lt;h3 id=&quot;AvalonJS简介&quot;&gt;&lt;a href=&quot;#AvalonJS简介&quot; class=&quot;headerlink&quot; title=&quot;AvalonJS简介&quot;&gt;&lt;/a&gt;AvalonJS简介&lt;/h3&gt;&lt;p&gt;avalon是一个简单易用迷你的MVVM框架，为解决同一业务逻辑存在各种视图呈现而开发出来的。&lt;br&gt;MVVM将所有前端代码彻底分成两部分，视图的处理通过绑定实现（angular中叫指令）， 业务逻辑则集中在一个个叫VM的对象中处理。我们只要操作VM的数据，它就自然而然地神奇地同步到视图。&lt;br&gt;avalon的所有指令都是以ms-*命名。跟MicroSoft并没有关系。&lt;/p&gt;
&lt;h3 id=&quot;AvalonJS的优势&quot;&gt;&lt;a href=&quot;#AvalonJS的优势&quot; class=&quot;headerlink&quot; title=&quot;AvalonJS的优势&quot;&gt;&lt;/a&gt;AvalonJS的优势&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;绝对的优势就是降低了耦合， 让开发者从复杂的各种事件中挣脱出来。 举一个简单地例子， 同一个状态可能跟若干个事件的发生顺序与发生时的附加参数都有关系， 不用 MVC (包括 MVVM) 的情况下, 逻辑可能非常复杂而且脆弱。 并且通常需要在不同的地方维护相关度非常高的一些逻辑， 稍有疏忽就会酿成 bug 不能自拔。使用这类框架能从根本上降低应用开发的逻辑难度， 并且让应用更稳健。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;除此之外， 也免去了一些重复的体力劳动， 一个 {value} 就代替了一行 $(selector).text(value)。 一些个常用的 directive 也能快速实现一些原本可能需要较多代码才能实现的功能&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="技术分享" scheme="http://pages.fedt.xin/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="JS框架" scheme="http://pages.fedt.xin/tags/JS%E6%A1%86%E6%9E%B6/"/>
    
      <category term="AvalonJS" scheme="http://pages.fedt.xin/tags/AvalonJS/"/>
    
  </entry>
  
  <entry>
    <title>CSS垂直水平居中与z-index详解</title>
    <link href="http://pages.fedt.xin/2016/05/21/CssAlignCenterZ-index/"/>
    <id>http://pages.fedt.xin/2016/05/21/CssAlignCenterZ-index/</id>
    <published>2016-05-20T16:00:00.000Z</published>
    <updated>2016-05-21T05:35:30.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;优雅实现垂直水平居中的3种方法&quot;&gt;&lt;a href=&quot;#优雅实现垂直水平居中的3种方法&quot; class=&quot;headerlink&quot; title=&quot;优雅实现垂直水平居中的3种方法&quot;&gt;&lt;/a&gt;优雅实现垂直水平居中的3种方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h4 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h4&gt;使用绝对定位，并设置&lt;code&gt;left&lt;/code&gt;,&lt;code&gt;right&lt;/code&gt;,&lt;code&gt;top&lt;/code&gt;,&lt;code&gt;bottom&lt;/code&gt;为0，&lt;code&gt;margin:auto&lt;/code&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;html&lt;/span&gt;,&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.div&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h4 id=&quot;方法二&quot;&gt;&lt;a href=&quot;#方法二&quot; class=&quot;headerlink&quot; title=&quot;方法二&quot;&gt;&lt;/a&gt;方法二&lt;/h4&gt;&lt;p&gt;父元素使用&lt;code&gt;flex&lt;/code&gt;布局，&lt;code&gt;align-items: center;&lt;/code&gt;：设置垂直居中，&lt;code&gt;justify-content: center;&lt;/code&gt;：设置水平居中&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;html&lt;/span&gt;,&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;align-items&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;justify-content&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.div&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h4 id=&quot;方法三&quot;&gt;&lt;a href=&quot;#方法三&quot; class=&quot;headerlink&quot; title=&quot;方法三&quot;&gt;&lt;/a&gt;方法三&lt;/h4&gt;&lt;p&gt;使用相对定位，设置&lt;code&gt;top: 50%;&lt;/code&gt;，此时的top值50%是相对父元素的，再用&lt;code&gt;translateY(-50%);&lt;/code&gt;来转换，此时的-50%是相对自身高度的&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;html&lt;/span&gt;,&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.div&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;transform&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;translateY&lt;/span&gt;(-50%);&lt;span class=&quot;comment&quot;&gt;/*margin-top:-200px*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;层叠顺序详解-z-index&quot;&gt;&lt;a href=&quot;#层叠顺序详解-z-index&quot; class=&quot;headerlink&quot; title=&quot;层叠顺序详解(z-index)&quot;&gt;&lt;/a&gt;层叠顺序详解(z-index)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;参考链接：&lt;a href=&quot;http://www.cnblogs.com/bfgis/p/5440956.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cnblog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;z-index可以设置成三个值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;auto&lt;/code&gt;，默认值。当设置成auto的时候，当前元素的层叠级数是0，同时这个盒子不会创建新的层级上下文；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;，指示层叠级数，可以是负值，同时无论是什么值，都会创建一个新的层叠上下文；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inherit&lt;/code&gt;，父元素继承&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;优雅实现垂直水平居中的3种方法&quot;&gt;&lt;a href=&quot;#优雅实现垂直水平居中的3种方法&quot; class=&quot;headerlink&quot; title=&quot;优雅实现垂直水平居中的3种方法&quot;&gt;&lt;/a&gt;优雅实现垂直水平居中的3种方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h4 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h4&gt;使用绝对定位，并设置&lt;code&gt;left&lt;/code&gt;,&lt;code&gt;right&lt;/code&gt;,&lt;code&gt;top&lt;/code&gt;,&lt;code&gt;bottom&lt;/code&gt;为0，&lt;code&gt;margin:auto&lt;/code&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;html&lt;/span&gt;,&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: relative;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.div&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: green;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;position&lt;/span&gt;: absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;right&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="笔记整理" scheme="http://pages.fedt.xin/categories/%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="css" scheme="http://pages.fedt.xin/tags/css/"/>
    
      <category term="垂直居中" scheme="http://pages.fedt.xin/tags/%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    
  </entry>
  
  <entry>
    <title>使用Github的Pages服务搭建Hexo静态博客</title>
    <link href="http://pages.fedt.xin/2016/05/18/HexoBlog/"/>
    <id>http://pages.fedt.xin/2016/05/18/HexoBlog/</id>
    <published>2016-05-17T16:00:00.000Z</published>
    <updated>2016-05-21T15:48:06.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Hexo介绍&quot;&gt;&lt;a href=&quot;#Hexo介绍&quot; class=&quot;headerlink&quot; title=&quot;Hexo介绍&quot;&gt;&lt;/a&gt;Hexo介绍&lt;/h2&gt;&lt;p&gt;Hexo是使用Node.js实现的快速、间接且高效的博客框架。&lt;br&gt;Hexo的特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超快速度：Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。&lt;/li&gt;
&lt;li&gt;支持MarkDown：Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。&lt;/li&gt;
&lt;li&gt;一键部署：只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。&lt;/li&gt;
&lt;li&gt;丰富插件：Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。&lt;br&gt;Hexo的官网：&lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;工具与环境&quot;&gt;&lt;a href=&quot;#工具与环境&quot; class=&quot;headerlink&quot; title=&quot;工具与环境&quot;&gt;&lt;/a&gt;工具与环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;&lt;br&gt;无脑下一步安装，命令行测试&lt;code&gt;node&lt;/code&gt;和&lt;code&gt;npm&lt;/code&gt;指令&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://git-scm.com&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;Git&lt;/a&gt;&lt;br&gt;Git的安装也很简单粗暴，一路下一步。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如若想利用Github的Pages服务搭建博客则建立名为&lt;code&gt;yourusernam.github.io&lt;/code&gt;的仓库，使用默认&lt;code&gt;master&lt;/code&gt;分支即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;若是想利用Coding(Gitcafe已被其收购)的Pages服务搭建博客则建立名为&lt;code&gt;yourusernam&lt;/code&gt;的仓库，使用&lt;code&gt;coding-pages&lt;/code&gt;分支。&lt;blockquote&gt;
&lt;p&gt;仓库命名均有严格规范，不可更改&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;先介绍常用命令&quot;&gt;&lt;a href=&quot;#先介绍常用命令&quot; class=&quot;headerlink&quot; title=&quot;先介绍常用命令&quot;&gt;&lt;/a&gt;先介绍常用命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo generate = hexo g  //生成静态博客，即重新生成public文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo server = hexo s  //本地预览调试 (一般组合使用 hexo g &amp;amp;&amp;amp; hexo s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo delopy = hexo d //(发布到github)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo new = hexo n //(执行该命令之后在source_posts目录下产生&amp;lt; blog name &amp;gt;.md文件，这是你的一篇新博客。可以在markdown工具下编写)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo clean //清除缓存,一般本地服务器效果有了但public文件没变化，则删除根目录的db.json再重新生成部署&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo d -g   //hexo d 和hexo g 的合并，生成并部署&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;安装Hexo&lt;/h2&gt;&lt;h4 id=&quot;安装Hexo到本地&quot;&gt;&lt;a href=&quot;#安装Hexo到本地&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo到本地&quot;&gt;&lt;/a&gt;安装Hexo到本地&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;1. 在桌面下使用GIT Bash输入下面代码，实现Hexo的安装
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;$ sudo npm install hexo-cli -g&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2. 命令行直接输入
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;npm install hexo-cli -g&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;初始化自己的个人博客&quot;&gt;&lt;a href=&quot;#初始化自己的个人博客&quot; class=&quot;headerlink&quot; title=&quot;初始化自己的个人博客&quot;&gt;&lt;/a&gt;初始化自己的个人博客&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;使用GIT Bash切换到你希望安装个人博客的文件夹下,输入命令：
`$ hexo init folderName`
folderName是你希望存放博客文件的文件夹名称
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;主题的安装&quot;&gt;&lt;a href=&quot;#主题的安装&quot; class=&quot;headerlink&quot; title=&quot;主题的安装&quot;&gt;&lt;/a&gt;主题的安装&lt;/h2&gt;&lt;p&gt;在完成上一步后，其实就可以运行查看页面了，这一步让你实现安装自己喜欢的主题，可以在Github网站中输入hexo关键字，可以搜索到很多相关主题，挑选一个就可以了&lt;/p&gt;
&lt;p&gt;我这里使用NEXT这个主题进行讲解，其他的方式也是一样的。&lt;/p&gt;
&lt;p&gt;使用GIT Bash切换到你刚才个人博客安装目录&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd &amp;lt;blogFolder&amp;gt;   //切换到博客的安装目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git clone https://github.com/iissnan/hexo-theme-next themes/next&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;完成上面步骤，会在theme的目录下多了一个next文件，说明主题下载成功了，但现在还没有配置完成&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;username.github.io&lt;/code&gt;文件下有一个&lt;code&gt;_config.yml&lt;/code&gt;文件，编辑它&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;theme&lt;/code&gt;的&lt;code&gt;value&lt;/code&gt;设为自己的主题名，这里是next——完成主题的配置&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;deploy&lt;/code&gt;的&lt;code&gt;value&lt;/code&gt;进行配置——完成主题发布地址配置:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Extensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Plugins: https://hexo.io/plugins/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Themes: https://hexo.io/themes/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme: next&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repo: git@github.com:username/username.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里可以添加多个仓库，repo：仓库名,分支名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;创建文章&quot;&gt;&lt;a href=&quot;#创建文章&quot; class=&quot;headerlink&quot; title=&quot;创建文章&quot;&gt;&lt;/a&gt;创建文章&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;username.github.io/source/_posts&lt;/code&gt;目录下创建你自己的文章，文章格式为Markdown的.md格式&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title: Hexo让博客梦变的简单&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: 2016-05-12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;title:文章名，date:发布的日期&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;发布到Github&quot;&gt;&lt;a href=&quot;#发布到Github&quot; class=&quot;headerlink&quot; title=&quot;发布到Github&quot;&gt;&lt;/a&gt;发布到Github&lt;/h2&gt;&lt;p&gt;安装自动部署发布工具&lt;/p&gt;
&lt;p&gt;使用GIT Bash切换到username.github.io目录下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;编译&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;本地测试&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo s -p 4000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-p:设置端口号，默认为4000，使用默认端口可以省略&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;本地测试没有问题后就可&lt;code&gt;hexo d -g&lt;/code&gt;部署到github或者coding上面了&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo介绍&quot;&gt;&lt;a href=&quot;#Hexo介绍&quot; class=&quot;headerlink&quot; title=&quot;Hexo介绍&quot;&gt;&lt;/a&gt;Hexo介绍&lt;/h2&gt;&lt;p&gt;Hexo是使用Node.js实现的快速、间接且高效的博客框架。&lt;br&gt;Hexo的特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;超快速度：Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。&lt;/li&gt;
&lt;li&gt;支持MarkDown：Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。&lt;/li&gt;
&lt;li&gt;一键部署：只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。&lt;/li&gt;
&lt;li&gt;丰富插件：Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。&lt;br&gt;Hexo的官网：&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;Hexo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术分享" scheme="http://pages.fedt.xin/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Github" scheme="http://pages.fedt.xin/tags/Github/"/>
    
      <category term="Hexo" scheme="http://pages.fedt.xin/tags/Hexo/"/>
    
      <category term="静态博客" scheme="http://pages.fedt.xin/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript设计模式学习笔记1</title>
    <link href="http://pages.fedt.xin/2016/05/13/JS%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%B3%BB%E5%88%9701/"/>
    <id>http://pages.fedt.xin/2016/05/13/JS设计模式系列01/</id>
    <published>2016-05-13T08:36:54.000Z</published>
    <updated>2016-05-21T16:13:18.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;学习SegmentFault上的 &lt;code&gt;JavaScript&lt;/code&gt;设计模式 笔记&lt;br&gt;原文：&lt;a href=&quot;https://segmentfault.com/a/1190000003923665&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;听飞狐聊JavaScript设计模式系列01&lt;/a&gt;&lt;br&gt;系列一主要回顾ES5中数组的方法，除原文介绍还查阅了MDN相关资料&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Array-prototype-some&quot;&gt;&lt;a href=&quot;#Array-prototype-some&quot; class=&quot;headerlink&quot; title=&quot;Array.prototype.some()&quot;&gt;&lt;/a&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;MDN-Array.prototype.some()&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;arr.some(callback[, thisArg])&lt;/code&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;p&gt;callback&lt;br&gt;用来测试每个元素的函数。&lt;br&gt;thisArg&lt;br&gt;执行 callback 时使用的 this 值。&lt;/p&gt;
&lt;h4 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h4&gt;&lt;p&gt;some 为数组中的每一个元素执行一次 callback 函数，&lt;strong&gt;直到找到一个使得 callback 返回一个“真值”&lt;/strong&gt;（即可转换为布尔值 true 的值）。如果找到了这样一个值，some 将会立即返回 true。否则，some 返回 false。callback 只会在那些”有值“的索引上被调用，不会在那些被删除或从来未被赋值的索引上调用。&lt;/p&gt;
&lt;p&gt;callback 被调用时传入三个参数：元素的值，元素的索引，被遍历的数组。&lt;/p&gt;
&lt;p&gt;如果为 some 提供了一个 thisArg 参数，将会把它传给被调用的 callback，作为 this 值。否则，在非严格模式下将会是全局对象，严格模式下是 undefined。&lt;/p&gt;
&lt;p&gt;some 被调用时不会改变数组。&lt;/p&gt;
&lt;p&gt;some 遍历的元素的范围在第一次调用 callback. 时就已经确定了。在调用 some 后被添加到数组中的值不会被 callback 访问到。如果数组中存在且还未被访问到的元素被 callback 改变了，则其传递给 callback 的值是 some 访问到它那一刻的值。&lt;/p&gt;
&lt;h4 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h4&gt;&lt;p&gt;例子：测试数组元素的值&lt;/p&gt;
&lt;p&gt;下面的例子检测在数组中是否有元素大于 10。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isBigEnough&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;element, index, array&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (element &amp;gt;= &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;].some(isBigEnough);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// passed is false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;].some(isBigEnough);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// passed is true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Array-prototype-reduce&quot;&gt;&lt;a href=&quot;#Array-prototype-reduce&quot; class=&quot;headerlink&quot; title=&quot;Array.prototype.reduce()&quot;&gt;&lt;/a&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;MDN-Array.prototype.reduce&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;p&gt;reduce() 方法接收一个函数作为累加器（accumulator），数组中的每个值（从左到右）开始&lt;strong&gt;合并&lt;/strong&gt;，最终为一个值。&lt;/p&gt;
&lt;h4 id=&quot;语法-1&quot;&gt;&lt;a href=&quot;#语法-1&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;arr.reduce(callback,[initialValue])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;参数-1&quot;&gt;&lt;a href=&quot;#参数-1&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;br&gt;执行数组中每个值的函数，包含四个参数&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;previousValue&lt;/strong&gt;&lt;br&gt;上一次调用回调返回的值，或者是提供的初始值（initialValue）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;currentValue&lt;/strong&gt;&lt;br&gt;数组中当前被处理的元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;&lt;br&gt;当前元素在数组中的索引&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;array&lt;/strong&gt;&lt;br&gt;调用 reduce 的数组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;initialValue&lt;/strong&gt;&lt;br&gt;作为第一次调用 callback 的第一个参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;描述-1&quot;&gt;&lt;a href=&quot;#描述-1&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h4&gt;&lt;p&gt;&lt;code&gt;reduce()&lt;/code&gt; 为数组中的每一个元素依次执行回调函数，&lt;strong&gt;不包括&lt;/strong&gt;数组中&lt;strong&gt;被删除&lt;/strong&gt;或&lt;strong&gt;从未被赋值&lt;/strong&gt;的元素，接受四个参数：初始值（或者上一次回调函数的返回值），当前元素值，当前索引，调用 &lt;code&gt;reduce&lt;/code&gt; 的数组。&lt;/p&gt;
&lt;p&gt;回调函数&lt;strong&gt;第一次&lt;/strong&gt;执行时，&lt;code&gt;previousValue&lt;/code&gt; 和 &lt;code&gt;currentValue&lt;/code&gt; 可以是一个值，如果在调用 &lt;code&gt;reduce()&lt;/code&gt; 时提供了初始值 &lt;code&gt;initialValue&lt;/code&gt;，那么第一个 &lt;code&gt;previousValue&lt;/code&gt; 等于 &lt;code&gt;initialValue&lt;/code&gt; ，并且&lt;code&gt;currentValue&lt;/code&gt; 等于数组中的第一个值；如果&lt;code&gt;initialValue&lt;/code&gt; 未被提供，那么&lt;code&gt;previousValue&lt;/code&gt; 等于数组中的第一个值，&lt;code&gt;currentValue&lt;/code&gt;等于数组中的第二个值。&lt;/p&gt;
&lt;p&gt;如果数组为空并且没有提供initialValue， 会抛出TypeError 。如果数组仅有一个元素（无论位置如何）并且没有提供initialValue， 或者有提供initialValue但是数组为空，那么此唯一值将被返回并且callback不会被执行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;例&lt;/strong&gt;：如果把初始值作为第二个参数传入 reduce，最终返回值变为20，结果如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;].reduce(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;previousValue, currentValue, index, array&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; previousValue + currentValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;调用次数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;previousValue&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;currentValue&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;index&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;array&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;return value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;第一次调用&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;[0,1,2,3,4]&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第二次调用&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;[0,1,2,3,4]&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第三次调用&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;[0,1,2,3,4]&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;13&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第四次调用&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;13&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;[0,1,2,3,4]&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;第五次调用&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;16&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;[0,1,2,3,4]&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;20&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;使用reduce-扁平化数组-降维&quot;&gt;&lt;a href=&quot;#使用reduce-扁平化数组-降维&quot; class=&quot;headerlink&quot; title=&quot;使用reduce()扁平化数组(降维)&quot;&gt;&lt;/a&gt;使用&lt;code&gt;reduce()&lt;/code&gt;扁平化数组(降维)&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; flattened = [[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], [&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]].reduce(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a.concat(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// flattened is [0, 1, 2, 3, 4, 5]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;ES5中数组的新特性&quot;&gt;&lt;a href=&quot;#ES5中数组的新特性&quot; class=&quot;headerlink&quot; title=&quot;ES5中数组的新特性&quot;&gt;&lt;/a&gt;ES5中数组的新特性&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://segmentfault.com/a/1190000003923665&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;听飞狐聊JavaScript设计模式系列01&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ECMAScript5中数组的新特性，个人做了如下区分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;位置方法：&lt;code&gt;indexOf&lt;/code&gt;，&lt;code&gt;lastIndexOf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;迭代方法：&lt;code&gt;every&lt;/code&gt;，&lt;code&gt;filter&lt;/code&gt;，&lt;code&gt;forEach&lt;/code&gt;，&lt;code&gt;some&lt;/code&gt;，&lt;code&gt;map&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;缩小方法：&lt;code&gt;reduce&lt;/code&gt;，&lt;code&gt;reduceRight&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;注&lt;/em&gt;：&lt;strong&gt;迭代方法&lt;/strong&gt;回调支持&lt;strong&gt;3个参数&lt;/strong&gt;，第1个是遍历的数组内容(&lt;code&gt;currentElement&lt;/code&gt;)；第2个是对应的数组索引(&lt;code&gt;index&lt;/code&gt;)，第3个是数组本身(&lt;code&gt;array&lt;/code&gt;)&lt;/p&gt;
&lt;h4 id=&quot;every&quot;&gt;&lt;a href=&quot;#every&quot; class=&quot;headerlink&quot; title=&quot;every&quot;&gt;&lt;/a&gt;every&lt;/h4&gt;&lt;p&gt;对数组的每个元素都进行函数运行，如果&lt;strong&gt;每个&lt;/strong&gt;都是true，则返回true，否则，如果有一个是false，那就返回false咯&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;string&quot;&gt;&quot;卫士&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;包裹&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;皮带&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;包裹&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;包裹&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; res = arr.every(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; item==&lt;span class=&quot;string&quot;&gt;&quot;string&quot;&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   alert(res);    &lt;span class=&quot;comment&quot;&gt;// false，把数组中的数字项全部去掉，则返回true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;some&quot;&gt;&lt;a href=&quot;#some&quot; class=&quot;headerlink&quot; title=&quot;some&quot;&gt;&lt;/a&gt;some&lt;/h4&gt;&lt;p&gt;对数组的每个元素都进行函数运行，对&lt;strong&gt;任一项&lt;/strong&gt;返回为true，则返回为true，跟上面的every相似，好像every是处女座样(^__^)&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; res = arr.some(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item&amp;gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(res);    &lt;span class=&quot;comment&quot;&gt;// 返回false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;filter&quot;&gt;&lt;a href=&quot;#filter&quot; class=&quot;headerlink&quot; title=&quot;filter&quot;&gt;&lt;/a&gt;filter&lt;/h4&gt;&lt;p&gt;对数组的每个元素都进行函数运行，返回过滤后的选项&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;string&quot;&gt;&quot;卫士&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;包裹&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;565&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;皮带&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;包裹&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;包裹&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; res = arr.filter(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; item==&lt;span class=&quot;string&quot;&gt;&quot;string&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   alert(res);    &lt;span class=&quot;comment&quot;&gt;// 卫士, 包裹, 皮带, 包裹, 包裹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;学习SegmentFault上的 &lt;code&gt;JavaScript&lt;/code&gt;设计模式 笔记&lt;br&gt;原文：&lt;a href=&quot;https://segmentfault.com/a/1190000003923665&quot; rel=&quot;external nofollow&quot;&gt;听飞狐聊JavaScript设计模式系列01&lt;/a&gt;&lt;br&gt;系列一主要回顾ES5中数组的方法，除原文介绍还查阅了MDN相关资料&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Array-prototype-some&quot;&gt;&lt;a href=&quot;#Array-prototype-some&quot; class=&quot;headerlink&quot; title=&quot;Array.prototype.some()&quot;&gt;&lt;/a&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot; rel=&quot;external nofollow&quot;&gt;MDN-Array.prototype.some()&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;arr.some(callback[, thisArg])&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="笔记整理" scheme="http://pages.fedt.xin/categories/%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="JavaScript" scheme="http://pages.fedt.xin/tags/JavaScript/"/>
    
      <category term="原生JS" scheme="http://pages.fedt.xin/tags/%E5%8E%9F%E7%94%9FJS/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript杂记(RAF,Selection,Scroll)</title>
    <link href="http://pages.fedt.xin/2016/05/10/JavaScriptWiki/"/>
    <id>http://pages.fedt.xin/2016/05/10/JavaScriptWiki/</id>
    <published>2016-05-10T06:55:16.000Z</published>
    <updated>2016-05-21T16:13:56.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;reqeustAnimationFrame-RAF&quot;&gt;&lt;a href=&quot;#reqeustAnimationFrame-RAF&quot; class=&quot;headerlink&quot; title=&quot;reqeustAnimationFrame(RAF)&quot;&gt;&lt;/a&gt;&lt;code&gt;reqeustAnimationFrame(RAF)&lt;/code&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来自：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Window/cancelAnimationFrame&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;MDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;window.requestAnimationFrame()&lt;/strong&gt;这个方法是用来在页面重绘之前，通知浏览器调用一个指定的函数，以满足开发者操作动画的需求。这个方法接受一个函数为参，该函数会在重绘前调用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;: 如果想得到连贯的逐帧动画，函数中必须重新调用 &lt;code&gt;requestAnimationFrame()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果你想做逐帧动画的时候，你应该用这个方法。这就要求你的动画函数执行会先于浏览器重绘动作。通常来说，被调用的频率是每秒60次，但是一般会遵循W3C标准规定的频率。如果是后台标签页面，重绘频率则会大大降低。&lt;/p&gt;
&lt;p&gt;回调函数只会被传入一个&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;参数，这个参数指示当前被 &lt;code&gt;requestAnimationFrame&lt;/code&gt; 序列化的函数队列被触发的时间。因为很多个函数在这一帧被执行，所以每个函数都将被传入一个相同的时间戳，尽管经过了之前很多的计算工作。这个数值是一个小数，单位毫秒，精确度在 10 µs。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;参数&quot;&gt;&lt;a href=&quot;#参数&quot; class=&quot;headerlink&quot; title=&quot;参数&quot;&gt;&lt;/a&gt;参数&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;callback&lt;/strong&gt;&lt;br&gt;在每次需要重新绘制动画时,会调用这个参数所指定的函数。这个回调函数会收到一个参数，这个 &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; 类型的参数指示当前时间距离开始触发 &lt;code&gt;requestAnimationFrame&lt;/code&gt; 的回调的时间。&lt;/p&gt;
&lt;h4 id=&quot;返回值&quot;&gt;&lt;a href=&quot;#返回值&quot; class=&quot;headerlink&quot; title=&quot;返回值&quot;&gt;&lt;/a&gt;返回值&lt;/h4&gt;&lt;p&gt;&lt;code&gt;requestID&lt;/code&gt; 是一个长整型非零值,作为一个唯一的标识符.你可以将该值作为参数传给 &lt;code&gt;window.cancelAnimationFrame()&lt;/code&gt; 来取消这个回调函数。&lt;/p&gt;
&lt;h4 id=&quot;例子&quot;&gt;&lt;a href=&quot;#例子&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.requestAnimationFrame || &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.mozRequestAnimationFrame || &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.webkitRequestAnimationFrame || &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.msRequestAnimationFrame;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; d = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;SomeElementYouWantToAnimate&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;step&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;timestamp&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (start === &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) start = timestamp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; progress = timestamp - start;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  d.style.left = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.min(progress/&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&quot;px&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (progress &amp;lt; &lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      requestAnimationFrame(step);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;requestAnimationFrame(step);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Selection对象&quot;&gt;&lt;a href=&quot;#Selection对象&quot; class=&quot;headerlink&quot; title=&quot;Selection对象&quot;&gt;&lt;/a&gt;Selection对象&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Selection&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;MDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Selection对象一般由&lt;code&gt;window.getSelection()&lt;/code&gt;或其他方法产生。它代表页面中的文本选区，可能横跨多个元素。文本选区由用户拖拽鼠标经过文字而产生。 如果你想了解关于其他容纳纯文本的表单元素中的选区操作，请参考 Input, TextArea 和 document.activeElement ，我们可以在这些页面元素中使用 window.getSelection()。&lt;/p&gt;
&lt;p&gt;Selection对象所对应的是用户所选择的 ranges （区域），俗称拖蓝。默认情况下，该函数只针对一个区域，我们可以这样使用这个函数：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; selObj = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getSelection();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; range  = selObj.getRangeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;selObj 被赋予一个 Selection对象&lt;/li&gt;
&lt;li&gt;range 被赋予一个 Range 对象&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;调用 &lt;code&gt;Selection/toString()&lt;/code&gt; 方法会返回被选中区域中的&lt;strong&gt;纯文本&lt;/strong&gt;。要求变量为字符串的函数会自动对对象进行该处理，例如：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; selObj = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getSelection();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.alert(selObj);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;网页上的复制与剪切&quot;&gt;&lt;a href=&quot;#网页上的复制与剪切&quot; class=&quot;headerlink&quot; title=&quot;网页上的复制与剪切&quot;&gt;&lt;/a&gt;网页上的复制与剪切&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来自：&lt;a href=&quot;http://zencode.in/17.%E7%BD%91%E9%A1%B5%E4%B8%8A%E7%9A%84%E5%A4%8D%E5%88%B6%E4%B8%8E%E5%89%AA%E5%88%87.html&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;MZhou’s blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;IE 10及以上的版本修改了Document.execCommand()方法，增加了对剪切和复制的支持。Chrome从43版本开始也支持了这项特性。&lt;/p&gt;
&lt;p&gt;当选中了浏览器中的任意文本，只要执行这个方法就可以剪切或拷贝这段文字。有了这个API后，选中一段文字并拷贝会变的非常简单。&lt;/p&gt;
&lt;p&gt;这个API和Selection API一起使用时将会变的特别有用。你可以决定哪些文本被复制到剪切版。之后我们会详细阐述。&lt;/p&gt;
&lt;h4 id=&quot;一个简单的例子&quot;&gt;&lt;a href=&quot;#一个简单的例子&quot; class=&quot;headerlink&quot; title=&quot;一个简单的例子&quot;&gt;&lt;/a&gt;一个简单的例子&lt;/h4&gt;&lt;p&gt;让我们来增加一个按钮，点击这个按钮会拷贝一个email地址到用户的剪切版。&lt;/p&gt;
&lt;p&gt;我们在网页里面添加一个email地址和一个按钮，点击按钮会拷贝email地址：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;Email me at &amp;lt;a &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;js-emaillink&quot;&lt;/span&gt; href=&lt;span class=&quot;string&quot;&gt;&quot;mailto:matt@example.co.uk&quot;&lt;/span&gt;&amp;gt;matt@example.co.uk&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/a&amp;gt;&amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;js-emailcopybtn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;./images/copy-icon.png&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来在Javascript中，我们增加一个click事件监听器到按钮上。在事件监听器中我们通过class js-emaillink选中email地址，然后执行拷贝命令，然后用户的剪切版里面就会有email地址了。然后我们取消选中email地址，这样用户就不会见到文本被选中。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; copyEmailBtn = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.js-emailcopybtn&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;copyEmailBtn.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Select the email link anchor text&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; emailLink = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.js-emaillink&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; range = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createRange();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;range.selectNode(emailLink);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getSelection().addRange(range);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Now that we&#39;ve selected the anchor text, execute the copy command&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; successful = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.execCommand(&lt;span class=&quot;string&quot;&gt;&#39;copy&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; msg = successful ? &lt;span class=&quot;string&quot;&gt;&#39;successful&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;unsuccessful&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Copy email command was &#39;&lt;/span&gt; + msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Oops, unable to copy&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Remove the selections - &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; Should use&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// removeRange(range) when it is supported&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getSelection().removeAllRanges();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如上代码中使用了&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Selection&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;Selection API&lt;/a&gt;的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/getSelection&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;window.getSelection()&lt;/a&gt;方法选中链接的文本。在document.execCommand()方法后，我们可以通过调用window.getSelection().removeAllRanges()方法来移除选中。如果你想检查拷贝是否成功，那么你可以checkdocument.execCommand();的返回值。如果返回false那么表示不支持拷贝或者不能使用（没有选中文本）。我们将execCommand()放到try catch里面执行是为了确保一些极端情况下浏览器会抛出错误。&lt;/p&gt;
&lt;p&gt;剪切命令可以在文本框中使用。你可以移除文本输入框中的文字并放到剪切版中使用。&lt;/p&gt;
&lt;p&gt;在HTML中添加一个textarea和一个按钮：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;textarea&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;js-cuttextarea&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello I&#39;m some text&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;textarea&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;js-textareacutbtn&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;disable&lt;/span&gt;&amp;gt;&lt;/span&gt;Cut Textarea&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们可以这么写js：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cutTextareaBtn = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.js-textareacutbtn&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cutTextareaBtn.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cutTextarea = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;.js-cuttextarea&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cutTextarea.select();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; successful = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.execCommand(&lt;span class=&quot;string&quot;&gt;&#39;cut&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; msg = successful ? &lt;span class=&quot;string&quot;&gt;&#39;successful&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;unsuccessful&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Cutting text command was &#39;&lt;/span&gt; + msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Oops, unable to cut&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;queryCommandSupported和queryCommandEnabled&quot;&gt;&lt;a href=&quot;#queryCommandSupported和queryCommandEnabled&quot; class=&quot;headerlink&quot; title=&quot;queryCommandSupported和queryCommandEnabled&quot;&gt;&lt;/a&gt;queryCommandSupported和queryCommandEnabled&lt;/h4&gt;&lt;p&gt;在调用 document.execCommand() 之前你应该确认这个API是否被所在浏览器支持。这时候你可以用 document.queryCommandSupported() 方法来确认是否支持。在上面的例子中，我们可以在浏览器不支持时将按钮设置为disabled。具体代码如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;copyEmailBtn.disabled = !document.queryCommandSupported(&amp;#39;copy&amp;#39;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;document.queryCommandSupported())和document.queryCommandEnabled())的区别是：前者检测浏览器是否支持剪切或拷贝，后者检测是否有选中的文本用于剪切或拷贝。这在让用户选中文本的情况（不用Selection API）下比较有用。如果没有选中的文本，你可以显示一个消息给用户，这样更加友好～&lt;/p&gt;
&lt;h4 id=&quot;浏览器支持情况&quot;&gt;&lt;a href=&quot;#浏览器支持情况&quot; class=&quot;headerlink&quot; title=&quot;浏览器支持情况&quot;&gt;&lt;/a&gt;浏览器支持情况&lt;/h4&gt;&lt;p&gt;IE 10+、Chrome 43+和Opera 29+ 已经支持了这些命令。&lt;br&gt;Firefox虽然已经支持了这些命令，但是需要修改下首选项（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;具体看这里&lt;/a&gt;)。如果没有修改首选项，那么Firefox会抛出一个错误。&lt;br&gt;Safari目前不支持这些命令。&lt;/p&gt;
&lt;h4 id=&quot;已知问题&quot;&gt;&lt;a href=&quot;#已知问题&quot; class=&quot;headerlink&quot; title=&quot;已知问题&quot;&gt;&lt;/a&gt;已知问题&lt;/h4&gt;&lt;p&gt;直接用js代码调用 queryCommandSupported() 会一定会返回false，除非将其放在用户操作的回调函数中执行。这导致了你不能在浏览器不支持时禁用按钮。&lt;br&gt;在devtools中调用 queryCommandSupported() 一定会返回false。&lt;br&gt;目前剪切命令只在你用js选中文本时起作用。&lt;/p&gt;
&lt;h3 id=&quot;附：copy事件&quot;&gt;&lt;a href=&quot;#附：copy事件&quot; class=&quot;headerlink&quot; title=&quot;附：copy事件&quot;&gt;&lt;/a&gt;附：copy事件&lt;/h3&gt;&lt;p&gt;The copy event is fired when the user initiates a copy action through the browser UI (for example, using the CTRL/Cmd+C keyboard shortcut or selecting the “Copy” from the menu) and in response to an allowed &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;document.execCommand(‘copy’)&lt;/a&gt; call.&lt;br&gt;A handler for this event can modify the provided ClipboardEvent.clipboardData object by calling setData(format, data):&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;copy&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.clipboardData.setData(&lt;span class=&quot;string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Hello, world!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.clipboardData.setData(&lt;span class=&quot;string&quot;&gt;&#39;text/html&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;b&amp;gt;Hello, world!&amp;lt;/b&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.preventDefault(); &lt;span class=&quot;comment&quot;&gt;// We want our data, not data from any selection, to be written to the clipboard&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;A handler for this event cannot read the clipboard data using &lt;code&gt;clipboardData.getData()&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;scrollHeight-clientHeight-scrollTop&quot;&gt;&lt;a href=&quot;#scrollHeight-clientHeight-scrollTop&quot; class=&quot;headerlink&quot; title=&quot;scrollHeight,clientHeight,scrollTop&quot;&gt;&lt;/a&gt;&lt;code&gt;scrollHeight&lt;/code&gt;,&lt;code&gt;clientHeight&lt;/code&gt;,&lt;code&gt;scrollTop&lt;/code&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来源：&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollHeight&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;MDN-Element.scrollHeight&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Element/clientHeight&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;MDN-Element.clientHeight&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollTop&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;MDN-Element.scrollTop&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Element-scrollHeight&quot;&gt;&lt;a href=&quot;#Element-scrollHeight&quot; class=&quot;headerlink&quot; title=&quot;Element.scrollHeight&quot;&gt;&lt;/a&gt;Element.scrollHeight&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Element.scrollHeight&lt;/code&gt; 是计量元素内容高度的&lt;strong&gt;只读属性&lt;/strong&gt;，包括&lt;code&gt;overflow&lt;/code&gt;样式属性导致的视图中不可见内容。没有垂直滚动条的情况下，&lt;code&gt;scrollHeight&lt;/code&gt;值与元素视图填充所有内容所需要的最小值&lt;code&gt;clientHeight&lt;/code&gt;相同。包括元素的&lt;code&gt;padding&lt;/code&gt;，但不包括元素的&lt;code&gt;margin&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;属性将会对值四舍五入取整。如果需要小数值，使用Element.getBoundingClientRect().&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; intElemScrollHeight = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(id_attribute_value).scrollHeight;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;intElemScrollHeight 存储着与元素scrollHeight像素值对应的一个整数。scrollHeight是一个只读属性。&lt;br&gt;&lt;img src=&quot;https://developer.mozilla.org/@api/deki/files/840/=ScrollHeight.png&quot; alt=&quot;scrollHeight图解&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;判定元素是否滚动到底&quot;&gt;&lt;a href=&quot;#判定元素是否滚动到底&quot; class=&quot;headerlink&quot; title=&quot;判定元素是否滚动到底&quot;&gt;&lt;/a&gt;判定元素是否滚动到底&lt;/h4&gt;&lt;p&gt;如果元素滚动到底，下面等式返回true，没有则返回false.&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;element.scrollHeight - element.scrollTop === element.clientHeight&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;scrollHeight-演示&quot;&gt;&lt;a href=&quot;#scrollHeight-演示&quot; class=&quot;headerlink&quot; title=&quot;scrollHeight 演示&quot;&gt;&lt;/a&gt;scrollHeight 演示&lt;/h4&gt;&lt;p&gt;监听onscroll事件，这个等式可以用来判定用户是否阅读过文本。（参考 &lt;code&gt;element.scrollTop&lt;/code&gt; 和 &lt;code&gt;element.clientHeight&lt;/code&gt;属性）。例如：&lt;a href=&quot;http://jsbin.com/zeqohi/edit?html,css,js&quot; rel=&quot;external&quot; target=&quot;_blank&quot;&gt;scrollHeight 演示&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Element-clientHeight&quot;&gt;&lt;a href=&quot;#Element-clientHeight&quot; class=&quot;headerlink&quot; title=&quot;Element.clientHeight&quot;&gt;&lt;/a&gt;Element.clientHeight&lt;/h3&gt;&lt;p&gt;返回元素内部的高度(单位像素)，包含&lt;strong&gt;内边距&lt;/strong&gt;，但不包括水平滚动条、边框和外边距。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;clientHeight&lt;/code&gt; 可以通过 &lt;code&gt;CSS height&lt;/code&gt; + &lt;code&gt;CSS padding&lt;/code&gt; - &lt;code&gt;水平滚动条高度&lt;/code&gt; (如果存在)来计算.&lt;/p&gt;
&lt;h4 id=&quot;语法-1&quot;&gt;&lt;a href=&quot;#语法-1&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;var h = element.clientHeight;&lt;/code&gt;&lt;br&gt;返回&lt;strong&gt;整数 h&lt;/strong&gt;，表示 element 的 clientHeight（单位像素）。&lt;br&gt;clientHeight 是&lt;code&gt;只读&lt;/code&gt;的.&lt;/p&gt;
&lt;h3 id=&quot;Element-scrollTop&quot;&gt;&lt;a href=&quot;#Element-scrollTop&quot; class=&quot;headerlink&quot; title=&quot;Element.scrollTop&quot;&gt;&lt;/a&gt;Element.scrollTop&lt;/h3&gt;&lt;p&gt;这个&lt;code&gt;Element.scrollTop&lt;/code&gt; 属性可以设置或者获取一个元素距离他&lt;strong&gt;容器顶部&lt;/strong&gt;的像素距离。一个元素的 &lt;code&gt;scrollTop&lt;/code&gt; 是可以去计算出这个元素距离它容器顶部的可见高度。当一个元素的容器没有产生垂直方向的滚动条,那它的 scrollTop 的值默认为0.&lt;/p&gt;
&lt;h4 id=&quot;语法-2&quot;&gt;&lt;a href=&quot;#语法-2&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 获得滚动的距离&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var  intElemScrollTop = someElement.scrollTop;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行下面的代码, 可以去给一个元素设置一个正确的像素整型数值，如果element的容器已经被滚动了.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 设置滚动的距离&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;element.scrollTop = intValue;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;scrollTop可以被设置任何的整数, 但以下情况会报错:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果一个元素不能被滚动 (e.g. 它没有溢出容器或者 这个元素是不可滚动的), scrollTop被设置为0.&lt;/li&gt;
&lt;li&gt;设置scrollTop的值小于0，scrollTop 被设为0&lt;/li&gt;
&lt;li&gt;如果设置了超出这个容器可滚动的值, scrollTop 会被设为最大值.&lt;br&gt;&lt;img src=&quot;https://developer.mozilla.org/@api/deki/files/842/=ScrollTop.png&quot; alt=&quot;scrollTop图解&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;reqeustAnimationFrame-RAF&quot;&gt;&lt;a href=&quot;#reqeustAnimationFrame-RAF&quot; class=&quot;headerlink&quot; title=&quot;reqeustAnimationFrame(RAF)&quot;&gt;&lt;/a&gt;&lt;code&gt;reqeustAnimationFrame(RAF)&lt;/code&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来自：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Window/cancelAnimationFrame&quot; rel=&quot;external nofollow&quot;&gt;MDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;window.requestAnimationFrame()&lt;/strong&gt;这个方法是用来在页面重绘之前，通知浏览器调用一个指定的函数，以满足开发者操作动画的需求。这个方法接受一个函数为参，该函数会在重绘前调用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;: 如果想得到连贯的逐帧动画，函数中必须重新调用 &lt;code&gt;requestAnimationFrame()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果你想做逐帧动画的时候，你应该用这个方法。这就要求你的动画函数执行会先于浏览器重绘动作。通常来说，被调用的频率是每秒60次，但是一般会遵循W3C标准规定的频率。如果是后台标签页面，重绘频率则会大大降低。&lt;/p&gt;
&lt;p&gt;回调函数只会被传入一个&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;参数，这个参数指示当前被 &lt;code&gt;requestAnimationFrame&lt;/code&gt; 序列化的函数队列被触发的时间。因为很多个函数在这一帧被执行，所以每个函数都将被传入一个相同的时间戳，尽管经过了之前很多的计算工作。这个数值是一个小数，单位毫秒，精确度在 10 µs。&lt;br&gt;
    
    </summary>
    
      <category term="笔记整理" scheme="http://pages.fedt.xin/categories/%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="JavaScript" scheme="http://pages.fedt.xin/tags/JavaScript/"/>
    
      <category term="原生JS" scheme="http://pages.fedt.xin/tags/%E5%8E%9F%E7%94%9FJS/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET MVC摸索</title>
    <link href="http://pages.fedt.xin/2016/05/09/ASP.NET%20MVC/"/>
    <id>http://pages.fedt.xin/2016/05/09/ASP.NET MVC/</id>
    <published>2016-05-08T16:00:00.000Z</published>
    <updated>2016-05-21T15:30:42.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;MVC-ViewBag&quot;&gt;&lt;a href=&quot;#MVC-ViewBag&quot; class=&quot;headerlink&quot; title=&quot;MVC-ViewBag&quot;&gt;&lt;/a&gt;MVC-ViewBag&lt;/h2&gt;&lt;p&gt;一个控制器可以使用ViewBag对象来将数据或对象传递到视图模板中。ViewBag是一个&lt;strong&gt;动态对象&lt;/strong&gt;，它提供了一种便利的，后期绑定的方法来&lt;strong&gt;将信息从控制器传递到视图&lt;/strong&gt;中。你可以为它添加任何属性并赋上属性值。在未赋值之前该属性是不生效的，直到你赋值为止。例如：  &lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;title&quot;&gt;Welcome&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; name, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; numTimes = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ViewBag.Message = &lt;span class=&quot;string&quot;&gt;&quot;Hello &quot;&lt;/span&gt; + name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ViewBag.NumTimes = numTimes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; View();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ViewBag对象中已经包含了数据，它将被自动传递给视图。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;MVC-控制器向View传值的三种方法&quot;&gt;&lt;a href=&quot;#MVC-控制器向View传值的三种方法&quot; class=&quot;headerlink&quot; title=&quot;MVC 控制器向View传值的三种方法&quot;&gt;&lt;/a&gt;MVC 控制器向View传值的三种方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;提供视图模型对象&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;你能把一个对象作为View方法的参数传递给视图.  &lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ViewResult &lt;span class=&quot;title&quot;&gt;Index&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DateTime date = DateTime.Now;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; View(date);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后我们在视图中使用Razor的Model关键字来访问这个对象   &lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ViewBag.Title = &lt;span class=&quot;string&quot;&gt;&quot;Index&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h2&amp;gt;Index&amp;lt;/h2&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The day &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;: @(((DateTime)Model).DayOfWeek)   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者是  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```cs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@model DateTime    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ViewBag.Title = &lt;span class=&quot;string&quot;&gt;&quot;Index&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h2&amp;gt;Index&amp;lt;/h2&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The day &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;: @Model.DayOfWeek &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt; **使用ViewBag(视图包)传递数据**  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	* View  Bag 允许在一个动态的对象上定义任意属性,并在视图中访问它.这个动态的对象可以通过Controller.ViewBag属性访问它.  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```&lt;span class=&quot;function&quot;&gt;cs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ViewResult &lt;span class=&quot;title&quot;&gt;Index&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ViewBag.Message = &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ViewBag.Date = DateTime.Now;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; View();    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ViewBag.Title = &lt;span class=&quot;string&quot;&gt;&quot;Index&quot;&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h&amp;gt;Index&amp;lt;/h&amp;gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The day &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;: @ViewBag.Date.DayOfWeek    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p /&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The message &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;: @ViewBag.Message&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用View Data传递数据&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在MVC3.0之前,主要是通过这种方式传递数据,它是通过用 ViewDataDictionary类实现的,而不是动态的对象.ViewDataDictionary类是类似标准”键/值”集合,并通过Controller类的ViewData属性进行访问的.这个方法,在视图中需要对对象进行转换.&lt;br&gt;&lt;em&gt;控制器中:&lt;/em&gt; &lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ViewResult &lt;span class=&quot;title&quot;&gt;Index&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ViewData[&lt;span class=&quot;string&quot;&gt;&quot;Message&quot;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ViewData[&lt;span class=&quot;string&quot;&gt;&quot;Date&quot;&lt;/span&gt;] = DateTime.Now;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; View();    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ```  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*视图中:*  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```cs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 @&amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 ViewBag.Title = &lt;span class=&quot;string&quot;&gt;&quot;Index&quot;&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;lt;h2&amp;gt;Index&amp;lt;/h2&amp;gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 The day &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;: @(((DateTime)ViewData[&lt;span class=&quot;string&quot;&gt;&quot;Date&quot;&lt;/span&gt;]).DayOfWeek)    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &amp;lt;p /&amp;gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 The message &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;: @ViewData[&lt;span class=&quot;string&quot;&gt;&quot;Message&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;ASP-NET-MVC中form提交和控制器接受form提交过来的数据&quot;&gt;&lt;a href=&quot;#ASP-NET-MVC中form提交和控制器接受form提交过来的数据&quot; class=&quot;headerlink&quot; title=&quot;ASP.NET MVC中form提交和控制器接受form提交过来的数据&quot;&gt;&lt;/a&gt;ASP.NET MVC中form提交和控制器接受form提交过来的数据&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;cshtml页面form提交&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/GIv73hk.png&quot; alt=&quot;&quot;&gt;  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;控制器处理表单提交数据4种方式&lt;/strong&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;方法1:使用传统的Request请求取值&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[HttpPost]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;title&quot;&gt;AddNews&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; a=Request[&lt;span class=&quot;string&quot;&gt;&quot;text1&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; b=Request[&lt;span class=&quot;string&quot;&gt;&quot;text2&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方法2:Action参数名与表单元素name值一一对应&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[HttpPost]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;title&quot;&gt;AddNews&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; text1,&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; text2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; a=text1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; b=text2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方法3:从MVC封装的FormCollection容器中读取&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[HttpPost]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;title&quot;&gt;AddNews&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;FormCollection form&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; a=form[&lt;span class=&quot;string&quot;&gt;&quot;text1&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; b=form[&lt;span class=&quot;string&quot;&gt;&quot;text2&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方法4:使用实体作为Action参数传入，前提是提交的表单元素名称与实体属性名称一一对应&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[HttpPost]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;title&quot;&gt;AddNews&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;userModel user&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; a=user.text1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; b=user.text2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;ASP-NET-MVC-中的ViewData与ViewBag&quot;&gt;&lt;a href=&quot;#ASP-NET-MVC-中的ViewData与ViewBag&quot; class=&quot;headerlink&quot; title=&quot;ASP.NET MVC 中的ViewData与ViewBag&quot;&gt;&lt;/a&gt;ASP.NET MVC 中的ViewData与ViewBag&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Asp.net MVC默认使用 Web Form来作为View，新建的aspx页面均是继承于ViewPage。而ViewData和ViewBag都是ViewPage的属性。ViewPage.ViewData表示获取或设置一个字典，其中包含在控制器和视图时间传递的数据，也就是说ViewPage.ViewData是控制器Controller和视图View之间沟通传递数据的桥梁。而ViewPage.ViewBag则表示获取一个视图包。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;i&lt;/th&gt;
&lt;th&gt;类型和作用&lt;/th&gt;
&lt;th&gt;引入时间&lt;/th&gt;
&lt;th&gt;版本&lt;/th&gt;
&lt;th&gt;查询速度&lt;/th&gt;
&lt;th&gt;是否需要类型转换&lt;/th&gt;
&lt;th&gt;可读性&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ViewData&lt;/td&gt;
&lt;td&gt;字典类型（Key和Value的合）是 Controller和View之间传递数据的桥梁&lt;/td&gt;
&lt;td&gt;ASP.NETMVC 1.0引入&lt;/td&gt;
&lt;td&gt;基于.Net Framework 3.5&lt;/td&gt;
&lt;td&gt;ViewData查询速度比ViewBag快&lt;/td&gt;
&lt;td&gt;在ViewPage中查询数据时需要进行类型转换&lt;/td&gt;
&lt;td&gt;可读性相对要差点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ViewBag&lt;/td&gt;
&lt;td&gt;dynamic类型&lt;/td&gt;
&lt;td&gt;ASP.NET MVC 3.0引入&lt;/td&gt;
&lt;td&gt;基于.Net Framework 4.0&lt;/td&gt;
&lt;td&gt;查询速度比ViewData慢&lt;/td&gt;
&lt;td&gt;在ViewPage中查询数据时不需要进行类型转换&lt;/td&gt;
&lt;td&gt;可读性更好&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;MVC3中PartialView-与View-的区别&quot;&gt;&lt;a href=&quot;#MVC3中PartialView-与View-的区别&quot; class=&quot;headerlink&quot; title=&quot;MVC3中PartialView()与View()的区别&quot;&gt;&lt;/a&gt;MVC3中PartialView()与View()的区别&lt;/h2&gt;&lt;p&gt;当我们使用razor作为页面引擎时，它的视图文件扩展名为cshtml或者vbshtml，而之前作为分部视图的ascx文件，进行razor之后，也是cshtml，这与非razor引擎有些不同，在这方面，官方并没有显式把分部视图与标准视图分开，有时，我们在开发时，可能会出现一些混乱了，今天主要来说一下，如何正确的使用分部视图！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分部视图&lt;/strong&gt;在action中返回一定要用&lt;code&gt;PartialView()&lt;/code&gt;，而不要偷懒使用&lt;code&gt;View()&lt;/code&gt;，因为，如果你使用View()渲染视图，系统会认为你是一个标准视图，会为你加个默认的母板页（Layout)，除非你显式的设置了Layout这个属性。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/66PeL4y.png&quot; alt=&quot;layout=null&quot;&gt;&lt;/p&gt;
&lt;p&gt;之前的程序代码：&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;  　　　 &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;title&quot;&gt;PartialLogon&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2         &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; View();&lt;span class=&quot;comment&quot;&gt;//会认识它的标准视图，所以会加上默认的Layout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当返回视图后，你的分部视图会被加上默认的母板页，这不是我们希望看到的，当然有些同学会不先麻烦的在页面上显式的加上Layout=null&lt;/p&gt;
&lt;p&gt;事实上，如果你正确的返回分部视图，这行当然是不用加的。&lt;/p&gt;
&lt;p&gt;正确的写法：&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;title&quot;&gt;PartialLogon&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; PartialView();&lt;span class=&quot;comment&quot;&gt;//会将页面的Layout自动设为null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我想这后我们把这两个东西换个名称：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PartialView()=&amp;gt;渲染视图=&amp;gt;不带Layout&lt;/li&gt;
&lt;li&gt;View()=&amp;gt;渲染分部视图=&amp;gt;自动加上Layout&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MVC-ViewBag&quot;&gt;&lt;a href=&quot;#MVC-ViewBag&quot; class=&quot;headerlink&quot; title=&quot;MVC-ViewBag&quot;&gt;&lt;/a&gt;MVC-ViewBag&lt;/h2&gt;&lt;p&gt;一个控制器可以使用ViewBag对象来将数据或对象传递到视图模板中。ViewBag是一个&lt;strong&gt;动态对象&lt;/strong&gt;，它提供了一种便利的，后期绑定的方法来&lt;strong&gt;将信息从控制器传递到视图&lt;/strong&gt;中。你可以为它添加任何属性并赋上属性值。在未赋值之前该属性是不生效的，直到你赋值为止。例如：  &lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ActionResult &lt;span class=&quot;title&quot;&gt;Welcome&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; name, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; numTimes = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ViewBag.Message = &lt;span class=&quot;string&quot;&gt;&quot;Hello &quot;&lt;/span&gt; + name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ViewBag.NumTimes = numTimes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; View();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ViewBag对象中已经包含了数据，它将被自动传递给视图。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记整理" scheme="http://pages.fedt.xin/categories/%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="ASP.NET MVC" scheme="http://pages.fedt.xin/tags/ASP-NET-MVC/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://pages.fedt.xin/2016/05/01/hello-world/"/>
    <id>http://pages.fedt.xin/2016/05/01/hello-world/</id>
    <published>2016-04-30T16:00:00.000Z</published>
    <updated>2016-05-25T14:30:30.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="感悟生活" scheme="http://pages.fedt.xin/categories/%E6%84%9F%E6%82%9F%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="随笔" scheme="http://pages.fedt.xin/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
